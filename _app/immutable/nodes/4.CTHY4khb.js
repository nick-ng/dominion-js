var E2=Object.defineProperty;var T2=(s,t,a)=>t in s?E2(s,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):s[t]=a;var k1=(s,t,a)=>T2(s,typeof t!="symbol"?t+"":t,a);import"../chunks/CWj6FrbW.js";import"../chunks/CcW2EM-M.js";import{s as L,o as l2}from"../chunks/B3I-8xX6.js";import{G as q2,aa as A2,ah as O2,ba as $2,M as D2,O as j2,W as p,X as g,r as f,T as H,a as w,f as j,R as $1,V as G1,g as e,bb as R1,s as l,b8 as n1,x as v,b9 as i2,u,U as e2,ab as S,d as S1,aZ as z1,a$ as f2,a_ as h2,bc as N2,ap as F2}from"../chunks/PBm0O4Vo.js";import{i as B,b as Z1,s as c2,d as s2,a as F1}from"../chunks/g-8mpEs4.js";import{s as f1,c as V1,a as M1,b as r2,d as X1,g as m1,e as L1,C as H1,f as Y1,i as n2,A as Y2,B as S2,K as C2,h as R2}from"../chunks/CulNGd4u.js";import{w as L2,e as C1}from"../chunks/BIKEfg28.js";import{i as a2}from"../chunks/B_rrpYQ3.js";import{o as P2,s as M2}from"../chunks/D374yple.js";import{p as F}from"../chunks/CLigIjck.js";import{r as y2,c as p2}from"../chunks/DK-MWF5B.js";function k2(s,t,a=!1){if(s.multiple){if(t==null)return;if(!O2(t))return $2();for(var r of s.options)r.selected=t.includes(Q1(r));return}for(r of s.options){var n=Q1(r);if(D2(n,t)){r.selected=!0;return}}(!a||t!==void 0)&&(s.selectedIndex=-1)}function B2(s){var t=new MutationObserver(()=>{k2(s,s.__value)});t.observe(s,{childList:!0,subtree:!0,attributes:!0,attributeFilter:["value"]}),j2(()=>{t.disconnect()})}function I2(s,t,a=t){var r=!0;q2(s,"change",n=>{var o=n?"[selected]":":checked",c;if(s.multiple)c=[].map.call(s.querySelectorAll(o),Q1);else{var i=s.querySelector(o)??s.querySelector("option:not([disabled])");c=i&&Q1(i)}a(c)}),A2(()=>{var n=t();if(k2(s,n,r),r&&n===void 0){var o=s.querySelector(":checked");o!==null&&(n=Q1(o),a(n))}s.__value=n,r=!1}),B2(s)}function Q1(s){return"__value"in s?s.__value:s.value}const O1=L2({});{let s="";O1.subscribe(t=>{t.gameId&&s!==s&&(s=t.gameId)})}function v2(s,t=0){const a=[];for(let n=0;n<7;n++)a.push(`copper:${n}p${t}`);const r=[];for(let n=0;n<3;n++)r.push(`estate:${n}p${t}`);return{playerId:s,actions:1,coins:0,buys:1,ownedCards:[...r,...a],deck:[],discardPile:[...r,...a],hand:[],inPlay:[],queuedEffects:[]}}function J2(s){const t=[];for(let n=0;n<7;n++)t.push(`copper:${n}t0`);const a=[];for(let n=0;n<3;n++)a.push(`estate:${n}t0`);const r={playerId:s,actions:1,coins:0,buys:1,deck:["smithy:0"],discardPile:[...a,...t],hand:["merchant:0","merchant:1","silver:0","silver:1","militia:0"],inPlay:[],queuedEffects:[]};return{...r,ownedCards:[...r.deck,...r.discardPile,...r.hand,...r.inPlay].sort((n,o)=>n.localeCompare(o))}}function z2(s){const t=[];for(let n=0;n<7;n++)t.push(`copper:${n}t0`);const a=[];for(let n=0;n<3;n++)a.push(`estate:${n}t0`);const r={playerId:s,actions:1,coins:0,buys:1,deck:["smithy:0"],hand:["cellar:0t0",...a,t.pop()],discardPile:[...a,...t],inPlay:[],queuedEffects:[]};return{...r,ownedCards:[...r.deck,...r.discardPile,...r.hand,...r.inPlay].sort((n,o)=>n.localeCompare(o))}}function H2(s){const t=[];for(let n=0;n<7;n++)t.push(`copper:${n}t0`);const a=[];for(let n=0;n<3;n++)a.push(`estate:${n}t0`);const r={playerId:s,actions:1,coins:0,buys:1,deck:[],hand:["workshop:0t0",t.pop(),t.pop(),t.pop(),t.pop()],discardPile:[...t,...a],inPlay:[],queuedEffects:[]};return{...r,ownedCards:[...r.deck,...r.discardPile,...r.hand,...r.inPlay].sort((n,o)=>n.localeCompare(o))}}function W2(s){const t=[];for(let n=0;n<7;n++)t.push(`copper:${n}t0`);const a=[];for(let n=0;n<3;n++)a.push(`estate:${n}t0`);const r={playerId:s,actions:1,coins:0,buys:1,deck:[],hand:["remodel:aa","estate:aa","smithy:aa","market:aa",t.pop()],discardPile:[...t,...a],inPlay:[],queuedEffects:[]};return{...r,ownedCards:[...r.deck,...r.discardPile,...r.hand,...r.inPlay].sort((n,o)=>n.localeCompare(o))}}function K2(s){const t={playerId:s,actions:1,coins:0,buys:1,deck:[],discardPile:["village:1","merchant:1","smithy:1","market:1","village:2","merchant:2","smithy:2","market:2","village:3","merchant:3","smithy:3","market:3","village:4","merchant:4","smithy:4","market:4"],hand:["village:0","merchant:0","smithy:0","market:0","militia:0"],inPlay:[],queuedEffects:[]};return{...t,ownedCards:[...t.deck,...t.discardPile,...t.hand,...t.inPlay].sort((a,r)=>a.localeCompare(r))}}function Z2(s){const t=[];for(let n=0;n<7;n++)t.push(`copper:${n}t0`);const a=[];for(let n=0;n<3;n++)a.push(`estate:${n}t0`);const r={playerId:s,actions:1,coins:0,buys:1,deck:["estate:1a","village:0t0"],hand:["smithy:0","estate:1a"],discardPile:[...t,...a],inPlay:[],queuedEffects:[]};return{...r,ownedCards:[...r.deck,...r.discardPile,...r.hand,...r.inPlay].sort((n,o)=>n.localeCompare(o))}}function U2(s){const t={playerId:s,actions:1,coins:0,buys:0,deck:[],discardPile:[],hand:["village:0","merchant:0","smithy:0","market:0","militia:0"],inPlay:["village:1","merchant:1","smithy:1","market:1","village:2","merchant:2","smithy:2","market:2","village:3","merchant:3","smithy:3","market:3","village:4","merchant:4","smithy:4","market:4"],queuedEffects:[]};return{...t,ownedCards:[...t.deck,...t.discardPile,...t.hand,...t.inPlay].sort((a,r)=>a.localeCompare(r))}}function V2(s,t){const a=Object.values(s.playerStates);let r=0;for(let o=0;o<a.length;o++)r+=a[o].inPlay.length;const n=`${t||0}${s.turn}${r}${s.gameSeed}`;return parseInt(n,10)}function W1(s,t=0){if(!s)return"";let r=(s.turn+s.turnAdjustment+t)%s.turnOrder.length;for(;r<0;)r+=s.turnOrder.length;return s.turnOrder[r]}function g2(s,t){if(!t)return[];const a=[...t.turnOrder,...t.turnOrder],r=[];let n=!1,o=0;for(;r.length<t.turnOrder.length-1;){const c=a[o];n?r.push(c):c===s&&(n=!0),o++}return r}var X2=j('<thead><tr><th class="border px-2 py-0.5 text-center">Actions</th><th class="border px-2 py-0.5 text-center">Buys</th><th class="border px-2 py-0.5 text-center"> </th></tr></thead>'),Q2=j('<tr><td class="border px-2 py-0.5 text-center"> </td><td class="border px-2 py-0.5 text-center"> </td><td class="border px-2 py-0.5 text-center"> </td></tr>'),G2=j('<tr><td class="border px-2 py-0.5">Actions</td><td class="border px-2 py-0.5"> </td></tr> <tr><td class="border px-2 py-0.5"> </td><td class="border px-2 py-0.5"> </td></tr> <tr><td class="border px-2 py-0.5">Buys</td><td class="border px-2 py-0.5"> </td></tr>',1),e3=j("<table><!><tbody><!></tbody></table>");function o2(s,t){let a=F(t,"class",8,""),r=F(t,"actions",8),n=F(t,"coins",8),o=F(t,"buys",8),c=F(t,"horizontal",8,!1);var i=e3(),W=p(i);{var I=b=>{var h=X2(),A=p(h),O=g(p(A),2),t1=p(O,!0);f(O),f(A),f(h),H(()=>L(t1,M1)),w(b,h)};B(W,b=>{c()&&b(I)})}var x=g(W),$=p(x);{var d=b=>{var h=Q2(),A=p(h),O=p(A,!0);f(A);var t1=g(A),s1=p(t1,!0);f(t1);var U=g(t1),h1=p(U,!0);f(U),f(h),H(()=>{L(O,r()),L(s1,o()),L(h1,n())}),w(b,h)},X=b=>{var h=G2(),A=$1(h),O=g(p(A)),t1=p(O,!0);f(O),f(A);var s1=g(A,2),U=p(s1),h1=p(U,!0);f(U);var Q=g(U),l1=p(Q,!0);f(Q),f(s1);var a1=g(s1,2),G=g(p(a1)),y1=p(G,!0);f(G),f(a1),H(()=>{L(t1,r()),L(h1,M1),L(l1,n()),L(y1,o())}),w(b,h)};B($,b=>{c()?b(d):b(X,!1)})}f(x),f(i),H(()=>f1(i,1,V1(a()))),w(s,i)}var t3=j('<div class="relative h-card flex-shrink flex-grow basis-card-overlap"><!></div>'),s3=j('<input class="cursor-pointer" type="radio"/>'),a3=j('<input class="cursor-pointer" type="checkbox"/>'),r3=j('<label class="button-default absolute bottom-full-2 left-0 right-0 z-50 mx-auto w-[90%] cursor-pointer select-none rounded-lg bg-main-bg-1 text-center has-[:checked]:bg-blue-300 can-hover:py-2"><!></label>'),n3=j('<div class="relative h-card flex-shrink-0 flex-grow basis-card-overlap"><!> <!></div>'),o3=j("<button>Play all Treasures</button>"),l3=j('<button class="button-default"> </button>'),i3=j('<div class="border-subtle absolute left-0 right-0 top-10 z-50 mx-auto flex max-w-prose flex-row items-center gap-2 bg-main-bg p-2"> <div class="grow"></div> <!></div>'),c3=j("<div> </div>"),u3=j("<div>Choose a card</div>"),d3=j("<button> </button>"),f3=j('<div class="border-default absolute left-0 right-0 top-10 z-30 mx-auto flex max-w-prose flex-row items-center gap-2 bg-main-bg p-2"> <div class="grow"></div> <!> <!></div>'),h3=j('<div><div><div class="flex flex-row items-stretch justify-start px-2"><div class="pr-1"><div class="text-center">Discard</div> <div class="border-subtle box-content h-card w-card border-2 border-dashed"><!></div></div> <div class="px-1"><div class="text-center"> </div> <div class="border-subtle relative box-content h-card w-card border-2 border-dashed"></div></div> <div class="relative flex-grow pl-1"><div class="text-center">Played Cards</div> <div class="absolute bottom-0 top-0 m-auto flex h-full w-full items-center justify-center">Drag cards here to play</div> <div><div></div></div></div></div></div> <div><div></div> <div></div> <div><!></div></div> <!> <!></div>');function m2(s,t){G1(t,!1);const a=()=>s2(P2,"$optionsStore",r),[r,n]=c2(),o=S(),c=S(),i=S(),W=[],I=[];let x=F(t,"class",8,""),$=F(t,"gameState",8),d=F(t,"playerId",8),X=F(t,"boughtCardCenter",24,()=>({x:-1,y:-1})),b=F(t,"opponent",8,!1),h=F(t,"blockingEffect",8,null),A=F(t,"overrideBlocker",8,null),O=F(t,"onPlayCard",8,()=>{}),t1=F(t,"onPlayAllTreasures",8,()=>{}),s1=F(t,"onPlayEffect",8,()=>{}),U=S(!1),h1=S({}),Q=S(null),l1=S(null),a1=S(null),G=S({x:-1,y:-1}),y1=S({x:-1,y:-1}),i1=S(0),P=S([]),D=S(""),M=S({}),c1=S({});l2(()=>{if(e(l1)){const y=e(l1).getBoundingClientRect();R1(G,e(G).x=(y.left+y.right)/2),R1(G,e(G).y=(y.top+y.bottom)/2)}if(e(a1)){const y=e(a1).getBoundingClientRect();R1(y1,e(y1).x=(y.left+y.right)/2),R1(y1,e(y1).y=(y.top+y.bottom)/2)}if(e(Q)){const y=e(Q).getBoundingClientRect();l(i1,y.right-y.left)}}),n1(()=>(v($()),v(d())),()=>{l(o,$().playerStates[d()])}),n1(()=>(e(o),e(i1),X1),()=>{l(c,Math.min(r2*e(o).inPlay.length,e(i1)-X1))}),n1(()=>(e(o),e(c1)),()=>{l(i,e(o).hand.map((y,k)=>{const V=m1(y);if(V&&V.types.includes("treasure")){const K=e(c1)[k]||e(c1)[0];if(K){const v1=K.getBoundingClientRect(),J={x:(v1.left+v1.right)/2,y:(v1.top+v1.bottom)/2};return{cardId:y,card:V,cardCenter:J}}return{cardId:y,card:V,cardCenter:{x:-1,y:-1}}}return null}).filter(y=>y))}),i2(),a2();var C=h3(),q=p(C),o1=p(q),P1=p(o1),b1=g(p(P1),2),_1=p(b1);{var _=y=>{{let k=S1(()=>(v(b()),a(),u(()=>b()&&a().opponentAllUpsideDown)));H1(y,{get cardId(){return e(o),u(()=>e(o).discardPile[e(o).discardPile.length-1])},get initialCenter(){return X()},get upsideDown(){return e(k)}})}};B(_1,y=>{e(o),u(()=>e(o).discardPile.length>0)&&y(_)})}f(b1),Z1(b1,y=>l(a1,y),()=>e(a1)),f(P1);var E=g(P1,2),m=p(E),R=p(m);f(m);var T=g(m,2);L1(T,5,()=>(e(o),u(()=>e(o).deck)),y=>y,(y,k)=>{H1(y,{class:"absolute bottom-0 left-0",cardId:"back:0",get initialCenter(){return e(y1)},get upsideDown(){return b()}})}),f(T),Z1(T,y=>l(l1,y),()=>e(l1)),f(E);var g1=g(E,2),u1=g(p(g1),4),w1=p(u1);f1(w1,1,"flex h-full flex-shrink flex-row items-center justify-start"),L1(w1,7,()=>(e(o),u(()=>e(o).inPlay)),y=>y,(y,k,V)=>{var K=t3(),v1=p(K);{let J=S1(()=>(e(h1),e(k),u(()=>e(h1)[e(k)]??{x:-1,y:-1}))),e1=S1(()=>(v(b()),a(),u(()=>b()&&a().opponentAllUpsideDown)));H1(v1,{class:"absolute left-0",wiggle:!0,get cardId(){return e(k)},hoverFront:!0,hoverGrow:!0,get initialCenter(){return e(J)},get upsideDown(){return e(e1)}})}f(K),Z1(K,(J,e1)=>R1(M,e(M)[e1]=J),J=>{var e1;return(e1=e(M))==null?void 0:e1[J]},()=>[e(V)]),w(y,K)}),f(w1),f(u1),Z1(u1,y=>l(Q,y),()=>e(Q)),f(g1),f(o1),f(q);var p1=g(q,2),x1=g(p(p1),2);L1(x1,7,()=>(e(o),u(()=>e(o).hand)),y=>y,(y,k,V)=>{var K=n3(),v1=p(K);{var J=d1=>{var N=r3(),z=p(N);{var Y=T1=>{var Z=s3();y2(Z);var q1;H(()=>{q1!==(q1=e(k))&&(Z.value=(Z.__value=e(k))??"")}),p2(W,[],Z,()=>(e(k),e(D)),J1=>l(D,J1)),w(T1,Z)},E1=T1=>{var Z=a3();y2(Z);var q1;H(J1=>{Z.disabled=J1,q1!==(q1=e(k))&&(Z.value=(Z.__value=e(k))??"")},[()=>(v(h()),e(P),e(k),u(()=>h().selectCount!==0&&h().selectCount<=e(P).length&&!e(P).includes(e(k))))]),p2(I,[],Z,()=>(e(k),e(P)),J1=>l(P,J1)),w(T1,Z)};B(z,T1=>{v(h()),u(()=>h().selectCount===1)?T1(Y):T1(E1,!1)})}f(N),w(d1,N)};B(v1,d1=>{v(b()),v(h()),u(()=>{var N;return!b()&&((N=h())==null?void 0:N.selectSource)==="hand"})&&d1(J)})}var e1=g(v1,2);{let d1=S1(()=>b()?`back:h${e(V)}`:e(k)),N=S1(()=>!b());H1(e1,{class:"absolute left-0",get cardId(){return e(d1)},get initialCenter(){return e(G)},hoverFront:!0,hoverGrow:!0,get draggable(){return e(N)},get dragTarget(){return e(Q)},get upsideDown(){return b()},wiggle:!0,onDragThresholdChange:(z,Y)=>{l(U,Y)},onDrag:(z,Y)=>{l(h1,{[z]:Y}),O()(z,Y)}})}f(K),Z1(K,(d1,N)=>R1(c1,e(c1)[N]=d1),d1=>{var N;return(N=e(c1))==null?void 0:N[d1]},()=>[e(V)]),w(y,K)}),f(x1);var D1=g(x1,2),K1=p(D1);{var j1=y=>{var k=o3();C1("click",k,()=>{let V=!1;e(i).forEach(K=>{if(K){const{cardId:v1,cardCenter:J}=K;O()(v1,J),V=!0}}),V&&t1()()}),w(y,k)};B(K1,y=>{v($()),v(b()),u(()=>$().turnPhase==="buy-0"&&!b())&&y(j1)})}f(D1),f(p1);var N1=g(p1,2);{var B1=y=>{var k=i3(),V=p(k),K=g(V,3);{var v1=J=>{var e1=z1(),d1=$1(e1);L1(d1,1,()=>(v(A()),u(()=>A().buttons)),n2,(N,z)=>{var Y=l3(),E1=p(Y,!0);f(Y),H(()=>{Y.disabled=(e(z),u(()=>e(z).disabled)),L(E1,(e(z),u(()=>e(z).text)))}),C1("click",Y,()=>{e(z).onClick()}),w(N,Y)}),w(J,e1)};B(K,J=>{v(A()),u(()=>{var e1;return(e1=A())==null?void 0:e1.buttons})&&J(v1)})}f(k),H(()=>L(V,`${v(A()),u(()=>{var J;return(J=A())==null?void 0:J.message})??""} `)),w(y,k)};B(N1,y=>{!b()&&A()&&y(B1)})}var I1=g(N1,2);{var r1=y=>{var k=f3(),V=p(k),K=g(V,3);{var v1=N=>{const z=S1(()=>(v(h()),e(P),u(()=>h().selectCount-e(P).length)));var Y=c3(),E1=p(Y);f(Y),H(()=>L(E1,`Choose ${e(z)??""} more ${e(z)===1?"card":"cards"}.`)),w(N,Y)},J=N=>{var z=z1(),Y=$1(z);{var E1=T1=>{var Z=u3();w(T1,Z)};B(Y,T1=>{v(h()),e(D),u(()=>h().selectCount===1&&!e(D))&&T1(E1)},!0)}w(N,z)};B(K,N=>{v(h()),e(P),u(()=>h().selectCount>1&&h().selectCount>e(P).length)?N(v1):N(J,!1)})}var e1=g(K,2);{var d1=N=>{const z=S1(()=>(v(h()),e(P),e(D),u(()=>h().selectCount>1&&h().selectCount>e(P).length||h().selectCount===1&&!e(D))));var Y=z1(),E1=$1(Y);L1(E1,1,()=>(v(h()),u(()=>h().buttons)),n2,(T1,Z)=>{var q1=d3(),J1=p(q1,!0);f(q1),H(()=>{f1(q1,1,(e(Z),u(()=>`${e(Z).className||"button-default"} py-2`))),q1.disabled=(e(Z),v(e(z)),u(()=>e(Z).onClick?e(Z).disabled:e(z))),L(J1,(e(Z),u(()=>e(Z).text)))}),C1("click",q1,()=>{e(Z).onClick?e(Z).onClick():h()&&(s1()({type:h().type,playerId:d(),payloadArray:h().selectCount===1?[e(D)]:e(P)}),l(D,""),l(P,[]))}),w(T1,q1)}),w(N,Y)};B(e1,N=>{v(h()),u(()=>{var z;return(z=h())==null?void 0:z.buttons})&&N(d1)})}f(k),H(()=>L(V,`${v(h()),u(()=>{var N;return(N=h())==null?void 0:N.message})??""} `)),w(y,k)};B(I1,y=>{v(b()),v(h()),u(()=>{var k;return!b()&&((k=h())==null?void 0:k.message)})&&y(r1)})}f(C),H(()=>{f1(C,1,`${x()} border-subtle relative flex flex-col items-stretch gap-2 bg-main-bg pb-2 transition-all`),f1(q,1,`${b()?"order-2":""}`),L(R,`Deck: ${e(o),u(()=>e(o).deck.length)??""}`),f1(u1,1,`box-content flex h-card flex-row justify-start border-2 border-dashed ${e(U)?"border-yellow-200":"border-subtle"}`),Y1(w1,`flex-basis: ${e(c)}px`),f1(p1,1,`${b()?"order-1":""} flex flex-row justify-between`),f1(x1,1,`flex h-card flex-shrink ${b()?"flex-row-reverse":"flex-row"}`),Y1(x1,(v(b()),v(h()),v(X1),v(r2),e(o),u(()=>{var y;return`flex-basis: ${(!b()&&((y=h())==null?void 0:y.selectSource)==="hand"?X1:r2)*e(o).hand.length}px`})))}),w(s,C),e2(),n()}var y3=j('<div class="border-subtle font flex h-card w-card items-center justify-center rounded-xl border-2 border-dashed"></div>'),p3=j('<div class="hover:z-10"><div> </div> <!></div>');function b2(s,t){G1(t,!0);let a=F(t,"sortByCost",3,!1),r=F(t,"disabled",3,!1),n=F(t,"onClick",3,()=>{});const o=f2(()=>Y2[t.cardName]);var c=z1(),i=$1(c);{var W=I=>{var x=p3(),$=p(x),d=p($);f($);var X=g($,2);{var b=A=>{{let O=f2(()=>`${t.cardName}:s`);H1(A,{get cardId(){return e(O)},onClick:(t1,s1)=>{const[U]=t1.split(":");n()(U,s1)},get disabled(){return r()}})}},h=A=>{var O=y3();w(A,O)};B(X,A=>{t.count>0?A(b):A(h,!1)})}f(x),H(()=>{Y1(x,a()?`order: ${e(o).cost}`:""),f1($,1,`${r()?"text-gray-500":""} text-center`),L(d,`${(t.count===1?e(o).displayNames[0]:e(o).displayNames[1])??""}: ${t.count??""}`)}),w(I,x)};B(i,I=>{e(o)&&I(W)})}w(s,c),e2()}var v3=j("<p> </p>"),g3=j("<div><p> </p> <!></div>"),m3=j('<div class="self-center"><!></div> <button> </button> <!>',1),b3=j('<div class="text-center">Choose a card</div>'),_3=j('<div class="row-span-2 flex flex-col gap-2 border-r border-r-gray-600 pr-2"><!> <!></div>'),x3=j('<div><!> <div class="relative"><h3 class="text-center"><!></h3> <button>Hide Supply</button> <button>Hide Supply</button></div> <div class="overflow-x-auto overflow-y-visible py-2"><div class="flex flex-row gap-2"></div> <div class="mt-2 flex flex-row gap-2"></div></div></div>');function S3(s,t){G1(t,!1);const a=S(),r=S(),n=`grid-template-columns: repeat(auto-fit, ${X1}px);`;let o=F(t,"gameState",8,null),c=F(t,"playerState",8,null),i=F(t,"blockingEffect",8,null),W=F(t,"onClick",8,()=>{}),I=F(t,"onBuy",8,()=>{}),x=F(t,"onCommitChoice",8,()=>{}),$=F(t,"onHide",8,()=>{}),d=S(""),X=S({x:-1,y:-1}),b=S(1/0);n1(()=>(v(o()),W1),()=>{l(a,o()&&W1(o()))}),n1(()=>e(d),()=>{l(r,m1(e(d)))}),n1(()=>(v(i()),v(c())),()=>{i()?l(b,i().maxCost):c()?l(b,c().coins):l(b,1/0)}),i2(),a2();var h=z1(),A=$1(h);{var O=t1=>{var s1=x3(),U=p(s1);{var h1=C=>{var q=_3(),o1=p(q);o2(o1,{get actions(){return v(c()),u(()=>c().actions)},get buys(){return v(c()),u(()=>c().buys)},get coins(){return v(c()),u(()=>c().coins)},horizontal:!0});var P1=g(o1,2);{var b1=_=>{var E=m3(),m=$1(E),R=p(m);{let p1=S1(()=>`${e(d)}:supply-choice`);H1(R,{get cardId(){return e(p1)}})}f(m);var T=g(m,2),g1=p(T,!0);f(T);var u1=g(T,2);{var w1=p1=>{var x1=g3(),D1=p(x1),K1=p(D1);f(D1);var j1=g(D1,2);{var N1=B1=>{var I1=v3(),r1=p(I1);f(I1),H(()=>L(r1,`(Not enough ${M1})`)),w(B1,I1)};B(j1,B1=>{v(c()),e(r),u(()=>c().coins-e(r).cost<0)&&B1(N1)})}f(x1),H(()=>L(K1,`Coins after: ${v(c()),e(r),u(()=>c().coins-e(r).cost)??""}`)),w(p1,x1)};B(u1,p1=>{i()||p1(w1)})}H(p1=>L(g1,p1),[()=>(v(i()),e(r),u(()=>{var p1,x1;return((x1=(p1=i())==null?void 0:p1.confirmMessage)==null?void 0:x1.replace("%card-name%",e(r).displayNames[0]))||"Buy Card"}))]),C1("click",T,()=>{i()?x()(e(d),e(X)):I()(e(d),e(X)),l(d,"")}),w(_,E)},_1=_=>{var E=b3();w(_,E)};B(P1,_=>{e(r)?_(b1):_(_1,!1)})}f(q),w(C,q)};B(U,C=>{v(c()),e(a),u(()=>c()&&e(a)===c().playerId)&&C(h1)})}var Q=g(U,2),l1=p(Q),a1=p(l1);{var G=C=>{var q=h2();H(()=>L(q,(v(i()),u(()=>i().message)))),w(C,q)},y1=C=>{var q=h2("Supply");w(C,q)};B(a1,C=>{i()?C(G):C(y1,!1)})}f(l1);var i1=g(l1,2),P=g(i1,2);f(Q);var D=g(Q,2),M=p(D);L1(M,5,()=>S2,C=>C,(C,q)=>{var o1=z1(),P1=$1(o1);{var b1=_1=>{const _=S1(()=>(v(m1),e(q),u(()=>m1(e(q))))),E=S1(()=>(v(c()),v(e(_)),e(b),u(()=>!c()||!!e(_)&&e(_).cost>e(b))));{let m=S1(()=>(v(o()),e(q),u(()=>{var R;return((R=o().supply[e(q)])==null?void 0:R.length)||0})));b2(_1,{get cardName(){return e(q)},get count(){return e(m)},onClick:(R,T)=>{e(E)||(l(d,R),l(X,T),W()(e(d),e(X)))},get disabled(){return e(E)}})}};B(P1,_1=>{v(o()),e(q),u(()=>o().supplyList.includes(e(q)))&&_1(b1)})}w(C,o1)}),f(M);var c1=g(M,2);L1(c1,5,()=>C2,C=>C,(C,q)=>{var o1=z1(),P1=$1(o1);{var b1=_1=>{const _=S1(()=>(v(m1),e(q),u(()=>m1(e(q))))),E=S1(()=>(v(c()),v(e(_)),e(b),u(()=>!c()||!!e(_)&&e(_).cost>e(b))));{let m=S1(()=>(v(o()),e(q),u(()=>{var R;return((R=o().supply[e(q)])==null?void 0:R.length)||0})));b2(_1,{get cardName(){return e(q)},get count(){return e(m)},sortByCost:!0,onClick:(R,T)=>{e(E)||(l(d,R),l(X,T),W()(e(d),e(X)))},get disabled(){return e(E)}})}};B(P1,_1=>{v(o()),e(q),u(()=>o().supplyList.includes(e(q)))&&_1(b1)})}w(C,o1)}),f(c1),f(D),f(s1),H(()=>{f1(s1,1,`${c()?"supply-template-cols":"single-template-cols"} grid gap-2 border-2 p-2`,"svelte-1ui0ral"),f1(i1,1,(v(c()),u(()=>{var C;return`${((C=c())==null?void 0:C.buys)===0?"button-nothing-to-do":"bg-main-bg text-gray-100"} absolute left-0 top-0 transition-all`})),"svelte-1ui0ral"),f1(P,1,(v(c()),u(()=>{var C;return`${((C=c())==null?void 0:C.buys)===0?"button-nothing-to-do":"bg-main-bg text-gray-100"} absolute right-0 top-0 transition-all`})),"svelte-1ui0ral"),Y1(M,n),Y1(c1,n)}),C1("click",i1,()=>{$()()}),C1("click",P,()=>{$()()}),w(t1,s1)};B(A,t1=>{o()&&t1(O)})}w(s,h),e2()}var C3=j('<div class="overflow-hidden transition-all"><div class="relative mb-2 flex flex-row items-stretch gap-2"><button>Show Supply</button> <div class="grow"></div> <div class="pointer-events-none self-center text-xl"> </div> <button>End Actions</button> <button>Buy Cards</button> <button>End Turn</button> <!></div> <!></div>'),P3=j('<div class="relative overflow-hidden border-b border-b-gray-600 transition-all"><!></div> <div class="flex flex-row justify-between"><h2 class="text-center"> </h2> <!></div> <button>Toggle</button> <!> <button><div><!></div></button>',1),k3=j('<div class="flex shrink grow flex-col items-stretch justify-start gap-2 overflow-hidden"><!> <!></div>');function w3(s,t){G1(t,!1);const a=()=>s2(P2,"$optionsStore",n),r=()=>s2(O1,"$gameStateStore",n),[n,o]=c2(),c=S(),i=S(),W=S(),I=S(),x=S(),$=S(),d=S(),X=S(),b=S(),h=S(),A=S();let O=F(t,"playerId",8),t1=F(t,"onBuy",8,()=>{}),s1=F(t,"onPlayCard",8,()=>{}),U=F(t,"onEndPhase",8,()=>{}),h1=F(t,"onPlayEffect",8,()=>{});const Q={none:"no-vignette -left-full right-full-2 pointer-events-none",faded:"no-vignette left-0 right-0 pointer-events-none",visible:"vignette left-0 right-0"};let l1=S({x:-1,y:-1}),a1=S(!0),G=S(!1),y1=S(Q.none),i1=S(!1),P=S(!1),D=S(""),M=S(null),c1=S("");const C=_=>{_?(l(G,!0),l(y1,Q.visible)):(l(G,!1),l(y1,Q.faded),setTimeout(()=>{l(y1,Q.none)},e(c)))},q=(_,E,m)=>_==="buy-1"&&E>0||m&&["workshop-1","remodel-2"].includes(m)?"button-next-action-here":"";l2(()=>{const _=T=>{e(G)||(a().invertScrollDirection?l(a1,T.deltaY<0):l(a1,T.deltaY>0))};window.addEventListener("wheel",_);let E=0;const m=T=>{let g1=0;for(let u1=0;u1<T.touches.length;u1++)g1+=T.touches[u1].screenY;e(G)||(E=g1/T.touches.length)},R=T=>{let g1=0;for(let w1=0;w1<T.touches.length;w1++)g1+=T.touches[w1].screenY;const u1=g1/T.touches.length;e(G)||(a().invertScrollDirection?l(a1,u1>E):l(a1,u1<E))};return window.addEventListener("touchstart",m),window.addEventListener("touchmove",R),()=>{window.removeEventListener("wheel",_),window.removeEventListener("touchstart",m),window.removeEventListener("touchmove",R)}}),n1(()=>a(),()=>{l(c,a().animationSpeed>10?0:100)}),n1(()=>e(c),()=>{l(i,`transition-duration: ${e(c)}ms;`)}),n1(()=>e(i),()=>{l(W,`${e(i)}flex-grow: 100; flex-shrink: 0.001;`)}),n1(()=>e(i),()=>{l(I,`${e(i)}flex-grow: 0.001; flex-shrink: 100;`)}),n1(()=>(r(),v(O())),()=>{var _;l(x,(_=r().gameState)==null?void 0:_.playerStates[O()])}),n1(()=>(e(x),m1),()=>{var _;l($,((_=e(x))==null?void 0:_.hand.filter(E=>{var m;return(m=m1(E))==null?void 0:m.types.includes("action")}).length)||0)}),n1(()=>(e($),e(x)),()=>{var _;l(c1,e($)===0||((_=e(x))==null?void 0:_.actions)===0?"button-nothing-to-do":"button-something-to-do")}),n1(()=>(e(x),m1),()=>{var _;l(d,((_=e(x))==null?void 0:_.hand.filter(E=>{var m;return(m=m1(E))==null?void 0:m.types.includes("treasure")}).length)||0)}),n1(()=>e(d),()=>{l(X,e(d)===0?"button-nothing-to-do":"button-something-to-do")}),n1(()=>e(x),()=>{var _;l(b,((_=e(x))==null?void 0:_.buys)===0?"button-nothing-to-do":"button-something-to-do")}),n1(()=>r(),()=>{l(h,W1(r().gameState))}),n1(()=>(r(),e(h)),()=>{var _;l(A,(_=r().gameState)==null?void 0:_.players[e(h)])}),n1(()=>(e(x),v(h1()),v(O())),()=>{var _;if(l(M,null),e(x)&&e(x).queuedEffects.length>0)for(let E=0;E<e(x).queuedEffects.length;E++){const m=e(x).queuedEffects[E];if(m.blocksPlayer||m.blocksEveryone){switch(m.type){case"cellar-1":{l(M,{type:"cellar-1",message:m.message||"",selectCount:0,selectSource:"hand",minCost:-1/0,maxCost:1/0,buttons:[{text:"Discard"}]});break}case"workshop-1":{C(!0),l(M,{type:"workshop-1",message:m.message||"",confirmMessage:"Gain %card-name%",selectCount:0,selectSource:"supply",minCost:-1/0,maxCost:4,buttons:[{text:"Open Supply",className:"button-next-action-here",onClick:()=>{C(!0)}},{text:"Skip",className:"button-lots-to-do",onClick:()=>{h1()({type:"workshop-1",playerId:O(),payloadArray:[]}),C(!1)}}]});break}case"remodel-1":{l(M,{type:"remodel-1",message:m.message||"",selectCount:1,selectSource:"hand",minCost:-1/0,maxCost:1/0,buttons:[{text:"Trash"}]});break}case"remodel-2":{C(!0),l(M,{type:"remodel-2",message:m.message||"",confirmMessage:"Gain %card-name%",selectCount:0,selectSource:"supply",minCost:-1/0,maxCost:((_=m.params)==null?void 0:_.maxCost)||0,buttons:[{text:"Open Supply",className:"button-next-action-here",onClick:()=>{C(!0)}},{text:"Skip",className:"button-lots-to-do",onClick:()=>{h1()({type:"remodel-2",playerId:O(),payloadArray:[]}),C(!1)}}]});break}}break}}}),n1(()=>(e(h),v(O()),e(A),e(M),r(),e($),e(x)),()=>{var _,E,m;if(l(c1,""),e(h)!==O())l(i1,!1),l(P,!1),l(D,`${(_=e(A))==null?void 0:_.name}'s turn`);else if(e(M))l(i1,!1),l(P,!1),l(D,e(M).message);else switch((E=r().gameState)==null?void 0:E.turnPhase){case"action":{l(c1,e($)===0||((m=e(x))==null?void 0:m.actions)===0?"button-nothing-to-do":"button-something-to-do"),l(i1,!1),l(P,!1),l(D,"Action Phase");break}case"buy-0":{l(i1,!0),l(P,!1),l(D,"Buy Phase");break}case"buy-1":{l(i1,!1),l(P,!0),l(D,"Buy Phase");break}default:l(i1,!1),l(P,!1),l(D,"Clean-up Phase")}}),i2(),a2();var o1=k3(),P1=p(o1);M2(P1,t,"default",{});var b1=g(P1,2);{var _1=_=>{var E=P3(),m=$1(E),R=p(m);{let r1=S1(()=>(e(h),v(O()),v(W1),r(),u(()=>e(h)!==O()?e(h):W1(r().gameState,-1))));m2(R,{class:"mb-[-1px]",get gameState(){return r(),u(()=>r().gameState)},get boughtCardCenter(){return e(l1)},get playerId(){return e(r1)},opponent:!0})}f(m);var T=g(m,2),g1=p(T),u1=p(g1,!0);f(g1);var w1=g(g1),p1=g(w1);o2(p1,{actions:0,buys:0,coins:0,horizontal:!0}),f(T);var x1=g(T,2),D1=g(x1,2);{var K1=r1=>{var y=C3(),k=p(y),V=p(k),K=g(V,4),v1=p(K,!0);f(K);var J=g(K,2),e1=g(J,2),d1=g(e1,2),N=g(d1,2);o2(N,{get actions(){return e(x),u(()=>e(x).actions)},get buys(){return e(x),u(()=>e(x).buys)},get coins(){return e(x),u(()=>e(x).coins)},horizontal:!0}),f(k);var z=g(k,2);m2(z,{get gameState(){return r(),u(()=>r().gameState)},get boughtCardCenter(){return e(l1)},get playerId(){return O()},get blockingEffect(){return e(M)},get onPlayCard(){return s1()},onPlayAllTreasures:()=>{U()("buy-0"),e(x)&&e(x).buys>0&&C(!0)},get onPlayEffect(){return h1()}}),f(y),H(Y=>{Y1(y,e(a1)?e(W):e(I)),f1(V,1,Y,"svelte-15iczjq"),L(v1,e(D)),f1(J,1,V1(e(c1)),"svelte-15iczjq"),J.disabled=(r(),u(()=>{var E1;return((E1=r().gameState)==null?void 0:E1.turnPhase)!=="action"})),f1(e1,1,V1(e(i1)?e(X):""),"svelte-15iczjq"),e1.disabled=!e(i1),f1(d1,1,V1(e(P)?e(b):""),"svelte-15iczjq"),d1.disabled=!e(P)},[()=>V1((r(),v(O()),e(M),u(()=>{var Y;return q(r().gameState.turnPhase,r().gameState.playerStates[O()].buys,(Y=e(M))==null?void 0:Y.type)})))]),C1("click",V,()=>{C(!0)}),C1("click",J,()=>{U()("action")}),C1("click",e1,()=>{var Y;e(h)===O()&&((Y=r().gameState)==null?void 0:Y.turnPhase)==="buy-0"&&C(!0),U()("buy-0")}),C1("click",d1,()=>{U()("buy-1")}),w(r1,y)};B(D1,r1=>{e(x)&&r1(K1)})}var j1=g(D1,2),N1=p(j1),B1=p(N1);{var I1=r1=>{S3(r1,{get playerState(){return e(x)},get blockingEffect(){return e(M)},get gameState(){return r(),u(()=>r().gameState)},onBuy:(y,k)=>{l(l1,k),t1()(y,k)},onCommitChoice:(y,k)=>{e(M)&&(l(l1,k),h1()({type:e(M).type,playerId:O(),payloadArray:[y]}),C(!1))},onHide:()=>{C(!1)}})};B(B1,r1=>{e(G)&&r1(I1)})}f(N1),f(j1),H(r1=>{Y1(m,e(a1)?e(I):e(W)),L(u1,(e(A),u(()=>{var y;return(y=e(A))==null?void 0:y.name}))),L(w1,` ${r1??""} `),f1(j1,1,`${e(y1)} transition-some absolute bottom-0 top-0 z-50 m-0 h-full w-full border-none p-0`,"svelte-15iczjq"),Y1(j1,e(i)),f1(N1,1,`${e(G)?"left-4 right-4":"-left-full right-full-2"} absolute bottom-0 top-0 my-auto flex h-min w-auto flex-col justify-center overflow-hidden bg-main-bg`,"svelte-15iczjq"),Y1(N1,e(i))},[()=>(v(g2),v(O()),r(),u(()=>g2(O(),r().gameState).map(r1=>{var y;return(y=r().gameState)==null?void 0:y.players[r1].name}).join(", ")))]),C1("click",x1,()=>{l(a1,!e(a1))}),C1("click",j1,r1=>{r1.target===r1.currentTarget&&C(!1)}),w(_,E)};B(b1,_=>{r(),e(h),u(()=>{var E;return(E=r().gameState)==null?void 0:E.playerStates[e(h)]})&&_(_1)})}f(o1),w(s,o1),e2(),o()}const A1=[4798,6785,5025,7520,2705,2808,2304,1160,3808,7275,1669,9821,3418,6954,8559,1442,9714,3488,3905,398,6913,3408,7528,4746,8707,5240,9569,992,4170,5911,6443,7415,8584,1555,6361,8298,4291,862,86,3063,6405,383,7380,9359,449,1115,3246,2018,6116,8956,3750,1062,9959,774,3272,9489,3252,9718,8929,9546,1688,8925,8112,4286,8482,752,5188,9609,49,427,9404,4220,8809,7032,4575,2047,3025,3885,7405,2536,868,5744,5463,6590,2157,2184,1824,7704,1195,1611,5245,4065,4613,7024,9557,2274,1734,9692,2284,2793,4722,45,124,2166,128,3462,4969,3012,9678,456,5474,8525,1786,934,2924,7604,2114,8007,6708,8537,5508,8633,9871,9011,978,8094,3240,2298,8192,5856,1715,8057,8818,4246,4475,8246,2820,7281,5768,4553,7226,2616,1851,885,243,6796,8665,3346,3698,3328,8441,457,196,4349,7391,7899,5829,4152,1314,6346,9484,4507,415,7333,1543,7581,4581,9185,556,4390,7556,4661,9806,9695,2825,3580,4894,3599,7838,2156,6083,6130,7314,9932,5050,5255,3802,6159,8367,7620,1303,7274,6143,1132,1120,6458,6368,5762,3621,9898,9957,8178,1778,436,6940,6787,1981,6803,2966,3575,1580,5155,9535,2381,5224,1759,4395,283,4582,3804,1213,548,9928,6362,8653,6656,2150,8175,7784,8926,8980,8111,5925,600,4879,9846,462,3476,3049,8512,5930,3395,1272,6427,4647,2852,9385,7209,9190,3754,3746,7376,3680,4413,6540,7982,225,4933,2668,4039,9839,5822,7269,7939,7495,5562,7882,4042,7502,8261,7685,803,5462,7117,2655,8277,4965,9881,9541,7089,5568,4530,6242,2992,5823,9755,6638,6279,2519,836,1887,3787,8283,6705,6549,575,1335,272,7120,6224,4274,6118,3201,6513,450,268,4904,9760,9196,9566,5574,2393,9592,6823,7990,2127,4696,9859,5502,8624,8356,7708,7258,1806,835,8686,5541,4151,5191,6805,3125,4907,7323,4513,6330,4483,7147,9581,4803,93,4648,2866,8090,7887,7227,2681,8536,8726,6942,3113,3425,3932,2007,200,5954,4886,2473,1712,2095,9814,986,4303,7191,1486,5104,834,9300,5402,8589,7691,2922,9040,2664,638,3878,3702,1961,5759,7367,4150,4124,1210,2292,2673,7588,6908,6195,1072,4884,808,1144,2830,773,769,4283,6183,1475,1069,6496,4694,9051,7865,2562,7128,9415,7440,1790,7458,4352,9304,907,21,2462,2054,3800,9341,791,793,7349,3601,4320,6825,9334,6984,9161,3058,4912,9653,3225,1687,3163,3183,6715,7777,1888,3512,6701,6766,2071,126,9818,9794,5764,6836,7365,996,9798,6463,2858,7958,3640,425,3371,9459,3564,7540,3291,3348,9823,2887,6089,7494,694,8645,3796,9704,8158,6113,7541,486,9070,1224,3435,6675,7568,6778,2203,2851,7791,8667,7459,3879,6904,1035,8947,2306,4460,4966,9938,947,2273,3547,6076,7402,1245,6012,5045,5962,7594,8194,8951,3365,8957,2180,2466,742,8985,9405,4278,5400,6259,2804,4138,4058,5347,6752,4610,3335,6632,4057,6982,8006,7571,3543,4651,256,1566,3342,2764,5940,5303,384,5292,1246,2339,6976,9792,2982,3061,3872,5734,1184,3491,9576,5924,6894,7573,7827,6176,8652,1749,2394,7266,555,199,5531,9616,6854,3140,5506,9689,5393,5523,6401,4659,6386,1577,7011,9364,7181,5466,8572,9477,1569,2480,6680,2781,2333,9587,4213,8562,2790,2623,9698,305,7910,2230,7547,2627,4162,5421,567,1300,2725,7145,6067,4975,4439,4176,8617,7084,3146,8662,7578,5943,5606,3813,9519,6546,9588,476,5459,8708,2193,4989,658,8915,6040,7387,1868,8124,7480,3661,1988,7030,7979,6832,5932,8795,6343,2424,6874,2144,2139,3733,6520,7806,7497,9053,8195,1372,5457,6566,2030,1945,9296,8035,313,8114,3809,3923,4234,6929,8495,9395,1748,8907,7488,5608,4288,7577,8206,2137,221,9214,7362,290,9037,4364,1430,6524,3018,4343,5720,4711,4830,3234,6702,8012,5287,5820,147,1922,604,5520,9309,6859,7916,1383,2453,2075,6765,4099,5547,5095,3052,316,4586,1063,633,2931,7511,522,6096,467,2640,8866,7414,8329,5272,922,6746,4315,4682,6815,1172,8144,572,7907,5598,7322,6730,9024,8166,5340,4995,7695,8649,7589,7439,2165,5041,8348,7721,3619,6101,4032,2753,3439,2576,622,4626,348,5658,5510,9377,4400,8069,274,2634,3757,7486,1488,8390,1321,882,501,2845,5123,6352,8177,8692,2032,4754,326,5694,647,2665,3818,3082,8746,783,8350,5419,627,7436,8270,9492,7751,1694,7701,1389,6428,6615,7477,7862,1403,827,3618,5030,9624,6480,7055,7957,9527,4059,8395,6772,4141,3775,5313,3155,1192,151,5772,984,4673,6478,9826,2325,212,9052,4590,1602,4980,8138,6843,2567,6142,2904,7883,3364,9311,9118,7148,4544,2812,428,4165,8433,6462,1216,5425,4247,8901,6014,1535,6448,7313,6467,2358,7064,661,8626,5318,761,8855,7875,4535,2425,9083,9802,8928,3340,8844,154,23,712,8616,4836,4235,3207,7403,6387,7026,9769,1537,5048,6814,3007,6061,579,3022,9333,9545,7774,7753,2864,7081,3887,1584,1171,1882,9250,5067,8396,6062,4026,9810,1794,1014,2194,7713,5758,7296,6652,3556,7167,3011,2369,206,3633,3093,736,9042,4440,6349,7249,3629,1788,5733,3469,8494,8338,7300,6767,5763,5043,3026,7529,4216,4372,3720,9579,3255,7550,4494,2583,1861,7558,7411,3307,1975,2074,1664,3920,7987,3849,6253,1361,7898,1352,9028,3902,9599,8643,9348,2579,764,9e3,4793,8539,7626,4525,6555,6184,6795,1952,9298,327,8341,7959,8720,2609,706,1286,4116,8104,6887,3946,3499,1256,916,8292,2052,707,6094,4745,1064,46,3203,4239,1737,2862,7866,8882,9864,7355,1094,2958,1149,8505,2051,5444,8042,6820,8679,1693,3730,4896,8307,8820,3076,1119,7264,3325,1678,8535,6010,7213,6953,7998,980,5086,2529,3426,832,6951,1337,6333,7433,9468,5936,2469,1244,3290,3333,87,5796,4327,6945,5011,7696,5600,7936,9149,7075,7292,4609,9032,4344,3391,2938,4293,7506,5012,7406,1155,559,2977,6043,1357,7794,5881,7190,878,8740,8504,8992,325,586,2286,9422,652,9091,9175,180,9685,4824,8434,2974,1411,7590,6465,275,9728,656,292,163,6713,4831,44,2160,9661,4178,8877,7070,5866,9723,3933,1050,4689,985,8029,4774,4341,1414,4522,7563,4663,649,2713,7457,5851,9940,4078,3896,6e3,2513,7279,6979,4002,1691,1660,5582,1473,3950,8737,342,2205,6556,4552,792,6905,6053,6658,1241,4866,4068,657,1407,8078,9471,2952,94,4571,9271,4171,7705,1312,8574,8416,7195,9786,5062,748,2014,426,828,3465,9363,2131,5992,616,8444,5175,3021,7061,6833,6088,2257,5335,1829,6310,1675,3489,1273,8732,9326,5144,9441,7782,8176,4479,5171,3168,2889,7851,1547,767,2788,8160,3431,5727,3530,4404,9669,3035,2879,2510,9643,5112,8857,5586,6054,6643,3411,6665,7396,4918,3222,6714,2730,2385,6729,5424,9808,1913,9635,1968,5671,6629,5436,9078,840,4201,814,2501,4938,629,6955,2891,2669,6997,1269,5008,7143,1789,43,441,338,4911,1293,1697,3147,495,6123,40,5863,8232,3081,1197,7843,7525,3602,7962,6601,617,596,137,5715,4931,5570,5909,1247,9259,6131,3826,2913,5333,3624,8817,6557,8025,9890,1214,5083,864,852,5120,5429,7097,1994,3915,4876,4720,97,6707,1729,5918,2927,619,5073,9811,5535,8438,2323,1763,8231,9323,3032,3536,7092,5617,759,6956,6830,5527,4227,932,560,6331,4455,56,8481,7988,8551,3226,6871,8100,7134,8774,6952,1243,7472,6822,8079,5329,6614,3696,6747,9897,5299,8009,5010,8308,7008,1081,3686,891,982,680,8026,7606,7176,787,4763,4393,3002,5190,6529,1147,7995,6738,8986,2168,9780,5629,1980,9801,6983,6798,356,8108,8296,5263,3056,9357,25,6640,3704,4983,8949,587,4850,1254,584,851,1795,3380,4049,6070,4945,1271,2190,2399,439,3705,895,7058,6189,7133,4302,57,6255,784,9343,8347,2964,1595,1255,5167,5059,9946,9971,4238,1363,2785,5284,1449,8598,380,3420,2307,3767,4805,6884,3287,2984,5776,5316,1859,8813,4101,7408,4347,1649,1318,8834,9648,3924,33,5665,692,6809,3062,9532,9119,3427,9055,5310,971,6722,9362,1421,1066,2548,4910,8060,7660,3453,2636,8400,8532,4169,3945,6960,8953,8628,1376,3514,492,3437,7364,2898,2757,4177,9665,8271,6351,3197,9872,7818,6430,5999,8316,2356,9757,1951,1521,9193,863,8641,7867,9507,7512,8554,7853,4623,6980,4807,6697,9618,1753,7297,4533,1344,8508,4570,6439,7009,4491,3257,9080,9103,5509,8654,3036,7855,7259,4252,7869,7628,3235,4135,168,3667,6099,8810,2406,5097,2712,4734,2241,5177,8920,4539,6728,1263,1040,8636,6222,5979,3825,7891,4944,588,7395,4211,5677,9758,6384,4144,3739,3516,9067,1204,7937,1364,920,3323,6106,6841,4922,4549,4007,3707,1251,6380,3569,2759,9517,7087,8888,9210,2167,2483,3050,6745,6712,5130,315,6868,2542,9074,5614,723,8050,7407,6606,9727,9077,9438,7625,2815,4730,2478,8570,4723,9736,1710,5591,6322,513,7374,7390,4490,3102,7974,9857,3972,4887,1404,2885,8376,406,9177,4802,2770,2503,5662,772,1093,2912,2066,4956,5907,5205,8258,6760,3242,7363,5213,3124,3172,1497,1380,8174,746,8304,8317,4028,9964,3339,7592,140,1052,7549,9411,2077,3951,72,4915,7575,5454,4156,4102,8107,466,3769,1022,7559,5216,6178,8448,7975,1983,585,3304,4649,2288,7412,5047,9785,6081,3379,1169,2751,2417,7382,2865,8324,8281,3660,3212,4013,1143,1053,4685,5437,7019,9481,4407,7678,3830,4061,7638,6136,3963,7016,4816,6084,357,378,5630,8773,7679,2973,6412,3748,5545,1153,8128,4512,7845,1909,7903,6022,4585,7994,9502,2316,3457,735,1568,9272,3105,5964,1636,6237,8041,6939,4033,1971,3927,8613,8683,411,3389,8869,4153,4125,7981,6003,5496,237,7527,6367,799,7893,8631,9219,7963,5572,3464,2493,3747,2929,4285,5599,4554,562,3909,8674,4463,9939,1554,508,9879,9182,5534,4862,2155,3303,460,5921,7760,5085,3196,4958,4088,4646,3984,4017,9703,7287,5880,7892,7033,1427,7668,6358,9626,1567,2969,3803,4325,6241,620,9796,1626,9154,5643,7539,6530,8226,5203,9303,8924,3961,8375,8922,8337,7051,8996,1969,1558,4205,6562,8914,800,52,3982,1078,9763,9537,1571,1589,8454,6091,3986,8747,5024,782,3152,3258,3306,7,3128,7014,469,797,3965,2408,2153,9111,4417,8768,1644,8800,2135,5475,5949,139,3322,8379,3899,2742,2896,1862,4529,1908,8838,2438,9967,8290,217,6258,3170,9956,3219,6957,2682,314,9208,5594,6436,1165,4778,6594,3108,9431,3751,9716,9906,8019,6873,6392,5899,9514,4843,8248,1426,9539,1423,4947,7359,2651,5571,9779,8465,9677,7709,5891,2329,2140,903,7768,6663,1559,9660,4434,2471,3051,5409,6791,5784,5197,324,9623,9172,4769,2696,651,5650,20,4181,3612,9674,3416,2999,7217,4724,8289,3498,5422,7770,4366,1808,4289,1751,5447,9354,1437,4747,3116,9180,8650,3e3,7173,2802,9951,2092,8265,332,5660,5642,8210,2855,4256,9085,5464,2364,8642,915,849,8998,6618,5230,5560,4761,4717,5828,5135,3121,4710,1284,9942,2164,8759,2098,2441,9223,8293,8871,9804,7983,1672,3077,5675,3244,7659,7372,9229,4031,6236,3294,3776,1603,4316,4756,4516,1738,259,173,6502,3482,7429,112,7850,4795,3749,271,4378,6264,7306,2666,2706,9493,8530,2078,3999,9192,4008,39,4821,4737,8705,2760,1201,8085,2962,4813,3376,5065,6287,8173,3175,9701,7672,4476,747,3390,4577,9329,7202,4231,3250,2755,2621,3983,5645,6420,3851,6137,5703,8634,9350,8027,511,2391,5032,5803,4199,2740,2382,162,8799,3198,4394,2481,7598,618,1630,2844,3529,5981,3969,557,5769,7136,9842,5980,5359,5544,5953,6141,9168,1724,8453,3211,8791,6252,2278,3090,4925,7642,6437,3045,1238,9790,7198,3194,2475,2882,4408,8014,1756,9922,169,4524,7153,9733,2736,8730,9807,6206,8558,8038,7164,2199,60,7208,7404,1029,5929,4454,917,7309,1227,2985,6188,2980,2042,7634,1008,3202,8315,506,1638,9049,7052,2971,7764,8208,4168,5682,5445,6486,6872,5554,5824,2011,4035,6716,6019,4023,7214,2232,6609,7593,3442,9072,8604,2746,5596,188,5180,3729,2405,263,9139,5070,8630,8354,3237,8189,4548,4497,8750,6826,7326,3828,2824,228,2604,4361,5223,4993,6522,5355,954,1542,9045,1212,4164,6277,9788,5740,2073,1842,4158,5782,8911,8978,8028,2048,7889,2479,5264,4313,5139,397,5185,6391,6831,7012,7251,5958,7646,485,5049,341,4492,9275,6449,6642,458,7057,7807,2410,521,8942,6973,6306,6754,8044,8517,1493,8854,1027,3639,7810,58,5966,2732,9633,7375,2535,6533,7621,5551,4669,1923,1572,2452,990,9130,3454,34,208,35,2786,2633,5405,3876,5847,9742,1999,8096,4207,9339,1791,1917,7976,2694,9767,8165,532,8580,9417,9115,7871,5908,2308,3988,7377,5640,5578,8521,4127,8070,5913,9893,3835,7824,377,8843,8340,4974,5831,302,5242,9290,9376,6757,2246,6205,3559,7611,8767,343,3718,763,5942,2491,9536,8607,9276,7233,6930,9418,239,3592,9601,5857,3459,6375,4750,4342,4992,5624,4094,2918,8881,6071,1886,7434,5704,924,3057,912,132,9795,4627,2173,6950,405,5670,3069,4825,3334,4942,4321,8397,7516,358,298,2780,2065,3466,7761,3948,9064,8105,5739,5036,3381,5889,1785,9081,10,732,3193,500,7920,988,9567,4459,3205,5647,5616,6808,7648,3860,6589,8005,9435,914,8542,8605,6696,3182,9634,6098,2828,7201,3548,6660,247,2430,1046,3886,7671,7798,7385,9960,4174,3405,9310,2721,6668,2543,3039,3017,8962,3078,8973,5023,7799,8731,232,7750,5532,8948,6208,9165,9676,2006,9406,6139,3903,2326,8305,4448,445,8034,8455,7530,8259,3120,7831,2794,71,4458,943,9735,7584,205,3470,8143,9295,31,4589,2767,9551,9062,1623,8841,2686,1827,9449,7463,2313,6008,7503,7187,171,6027,9681,1178,4654,4941,3195,4593,62,8808,8735,8728,5843,7246,2437,7633,2932,1770,9855,3614,8557,1574,6004,2101,1616,516,4611,8202,621,3540,9383,3724,6403,1960,1852,4212,2402,5472,2838,9607,1464,5243,1500,7687,8205,5143,3417,5467,4255,919,267,4897,1647,5771,8480,9244,8777,2868,3308,7015,2541,9756,821,7567,6093,1621,6399,276,7068,7137,3916,9279,5528,2461,3810,7216,2024,6742,5736,5208,2899,2547,7543,4928,9659,3438,9160,4432,5202,5319,3228,5114,1440,1447,861,1071,7924,5499,4797,6285,2464,640,3981,7350,2107,8161,2552,5352,7418,3410,5161,7624,2125,3097,8368,3956,2737,6734,8193,9108,8393,7398,2497,1190,6569,2893,3263,4016,8603,104,7629,830,7915,4777,2016,6455,3773,1939,8506,1306,5867,6468,1353,7902,3315,224,2963,7925,7834,3880,3003,5601,5737,5108,3281,4783,8979,67,1506,8470,6620,2015,4109,8331,1610,6603,7762,2123,1950,6810,8958,9892,3533,5369,179,261,2752,5766,2171,2197,9505,7483,6626,4891,5788,4639,322,9039,2849,8895,2355,8254,1466,6998,675,713,6634,7273,2905,5681,9203,141,6847,5005,2442,3,3274,7531,6574,8778,2389,7114,9598,3345,9054,4189,7656,8983,5777,1083,8233,2060,9580,8159,3118,9883,6064,2589,1025,8861,4699,4985,721,9746,9367,2611,7085,7923,2142,8682,542,9426,9737,5639,3651,204,9752,9875,2002,6276,1860,8812,6782,941,2277,3737,472,9544,5683,8672,8182,5137,498,6981,4021,5172,1746,7284,2463,3959,3402,6525,9921,9447,2266,6633,4662,464,3938,1825,4510,1608,6260,5748,8180,9314,7901,583,1690,3447,5971,7168,5195,8936,3839,4192,318,9744,5031,5996,3033,8927,9782,4511,4875,813,8876,6860,8372,2989,1897,2282,3396,5127,9178,1617,8668,5206,2443,4781,8814,6348,1281,1984,6576,9320,1640,7261,366,6388,2622,3573,8062,8036,806,6736,3019,1366,2842,9533,4206,1972,1036,3362,3487,4318,2610,1139,3761,7826,7330,8149,2145,6267,362,7324,7460,4446,1761,2979,9822,1810,7105,2826,5003,2727,9132,7268,4855,9675,727,9136,7348,3979,7255,2105,7908,8513,3685,2204,7645,7028,3863,4679,4217,7416,4978,2271,5165,5631,4281,1283,4370,3907,7017,227,848,5775,9131,1291,7808,3788,2081,9098,6477,7329,7895,7991,2596,9503,5783,545,3443,3221,1080,4732,1412,1573,7332,5948,7789,4596,4655,1990,8741,5887,9202,1804,7852,4089,7607,4531,4688,8975,5383,6577,7725,6915,9026,8300,1482,1927,8017,42,1341,3976,3471,9776,8757,1327,3363,7109,250,1002,1681,8903,3837,4962,9543,8004,8384,5259,9499,3510,5348,9337,9283,6580,3814,9691,3727,8786,3797,4296,2878,5233,9965,9948,7603,8389,8343,5790,7369,6190,8826,9253,3009,2667,4837,2176,1839,4621,6662,989,1670,2446,2429,1885,8547,7328,1125,6110,312,4365,3701,8891,5684,385,9316,3913,952,9360,3264,6806,5698,9582,2921,2352,2488,2733,3031,565,605,4906,3200,7282,7515,133,908,7700,1587,7430,254,6345,2642,3295,8423,5057,1359,3764,5956,8370,2574,5339,5063,8851,4426,7864,7454,8086,1345,2132,8076,9142,229,6453,2766,8856,8780,6073,376,1711,5773,3014,123,5367,8825,7857,1173,6535,9262,3708,9836,7174,6673,8364,3898,496,4095,5902,4977,8496,4270,365,5505,5384,8253,2779,5182,8186,9641,1803,5804,5815,8597,3834,9287,1435,9114,5705,8781,8811,5892,3699,7872,4018,2113,9637,1833,1429,1769,6434,4360,2457,6852,2174,9297,9307,3795,5897,1340,54,7192,4044,8425,8940,6938,1918,728,4469,9006,667,9552,4645,9774,3153,5935,4865,8999,8910,8150,737,9497,5917,1024,8437,3721,9238,6037,3369,7232,6261,9302,2476,4262,1639,8411,4462,5833,3397,4789,1928,1177,2688,3622,527,1133,3517,260,6510,9331,4121,5156,4399,517,4277,7361,8383,6971,4545,4812,7618,745,6372,2570,8058,9424,216,1581,2287,8184,2337,6497,3301,930,2058,2367,2302,1747,347,4951,5558,3344,5394,6172,9775,1713,7972,4890,3822,6244,9396,3283,4606,6597,7927,4254,3372,9112,5915,6827,2459,6425,865,3350,4569,4371,5236,2415,2502,4329,7444,9148,440,9918,3716,9896,6512,631,2477,4675,1883,1699,2761,6419,4077,7421,11,4630,5404,8543,22,8291,7509,1129,9617,6797,7999,153,4273,1258,6542,2354,1388,203,5253,3073,9137,6611,9237,3557,6245,3067,8220,3722,1371,5442,7856,5364,869,5423,1109,3842,9867,6867,8146,4849,9550,1375,9827,7496,4700,8065,1598,7351,5539,6921,6323,7754,1102,6988,4009,5079,7595,2886,9908,8424,2650,8351,2334,2210,929,6325,1288,2807,5484,7566,3611,4298,6593,1462,3356,2420,8831,9851,654,2988,6006,9430,432,2814,6845,5826,2835,7897,4735,8462,7018,3771,9487,6039,9204,5852,5251,8918,446,2285,8997,7001,8606,9166,9035,9577,6201,9748,7664,5142,8487,5231,2643,6624,2379,4506,9016,5779,7139,8404,6659,4827,2639,8276,1683,8993,7803,6818,7384,9901,6848,2915,5793,8409,7056,1955,9688,4817,1005,7989,1398,459,1561,4632,4888,4913,8655,9046,5038,3326,5342,1628,5974,5946,7218,6156,4405,3214,3065,6821,699,4873,8043,6741,9372,1663,1157,2253,6753,1799,7100,7225,4501,5767,3256,5749,186,3695,4767,7960,8717,4914,8541,6924,9198,2243,6433,2796,9420,7879,8688,3845,8789,3084,6517,7020,2976,881,9330,8523,1801,8868,6038,3865,8734,3921,2553,1797,1236,7711,9841,265,2374,1498,2499,4402,8676,2212,5289,4899,1358,5027,880,2310,303,8816,246,3311,3561,5354,7471,4758,8875,6324,2112,4173,9129,9476,3159,3332,2099,9141,2528,3399,6543,5146,3666,8171,9568,435,3843,2017,4020,4521,9038,2837,286,8787,9384,1970,2594,2685,684,6837,544,558,9001,6107,7007,3013,8227,5162,3703,289,3496,5592,6783,7741,4110,152,6592,7420,1193,6721,4384,6129,3731,6855,3610,9445,3738,4809,7004,9305,3606,8120,1240,7049,866,1130,614,7424,8420,18,4307,8466,6473,387,5836,451,6784,7930,4029,7544,3760,6828,4753,5633,8037,6334,6248,2208,414,2069,7088,9434,1938,9805,6211,8933,5382,3789,8945,5376,4572,9914,8439,4194,653,4167,4250,5058,2376,1858,7682,4653,8272,9258,2632,6573,5280,1174,5103,926,1409,1819,8483,9595,5187,1526,2059,7086,4197,5178,5266,6227,6928,5530,77,9068,7288,4677,7955,7692,7388,213,503,4990,1528,9575,3145,1661,8618,7102,4643,9479,5040,6649,9247,1228,9647,1018,8451,6155,53,1926,479,5366,335,3634,8385,837,7116,7371,1898,3646,1689,655,494,3475,2182,6515,2172,3298,3820,3756,8113,5403,2901,3850,241,1501,6575,4410,4811,8511,1935,8577,5679,9729,7773,1863,1899,6570,3744,9708,175,8021,352,9866,3282,6318,4618,9002,7973,9894,4845,2801,9069,3801,2703,6378,5133,4308,7833,5356,9063,7756,3791,6500,6298,8782,2332,4430,6382,3904,9949,3027,7822,4142,1480,8121,7956,4202,9256,4447,2846,6379,4741,8145,9134,2612,59,5526,8183,9707,1483,6340,9784,8902,9027,3911,1502,1757,1524,8842,4435,6435,696,6536,7095,6326,1656,2961,353,4828,211,2093,4025,6595,1290,2555,1855,4064,3382,1088,3719,8588,5471,3099,2799,3171,4056,5435,9824,5844,7042,6804,5513,3785,3693,6024,7896,5723,5399,3631,8325,7729,4573,5512,9442,1428,1075,465,5481,753,473,3669,5612,6120,2116,6880,6219,6047,3593,8516,8752,6263,6474,5026,7316,1362,38,1217,9667,701,1516,5014,5417,3728,4991,7118,7386,4052,9547,9306,74,1962,4445,3862,2384,1511,4770,2037,9694,9159,8556,6650,2260,6160,2805,4230,3500,6995,7453,8489,5750,7608,7579,1179,1826,3484,1151,8783,4640,5109,3545,1007,2867,5,7971,2388,9725,3793,4214,5845,8310,4383,2831,2769,5751,9613,4607,2409,9816,3846,8456,5327,3377,5840,5237,4583,4707,4984,1685,9092,6408,6505,3186,1853,471,2126,3479,5173,3714,4498,7239,9540,4787,8200,453,6813,9416,3493,1849,3044,6167,8155,8756,9604,9145,7967,3541,551,9444,7352,389,7188,1319,9184,2968,4900,519,8846,4004,7157,9526,4380,974,1233,8762,4159,3430,717,2914,8678,5426,1391,9401,9930,9739,9852,1782,3532,3531,6371,9632,7347,3848,4864,7368,7040,607,1643,7003,1496,9004,1138,4175,789,1673,8792,8477,2353,7045,5653,561,6794,1552,603,1043,8714,3503,4113,6192,1881,2072,146,7969,2533,6711,2819,4259,1282,1615,4134,1159,7047,7587,1583,1658,3292,6829,1809,8738,9668,7699,3831,1597,9656,2917,9787,3994,7111,5482,8602,9101,6686,2161,2920,8600,1958,507,5346,6631,2055,2524,1946,5816,6598,1838,9876,75,9904,8760,4909,7076,3412,6635,4880,6080,6162,7180,1549,8344,9235,4924,2470,8736,5241,5470,1392,9458,9429,2226,2351,3675,9797,4565,7022,6856,1079,7785,455,2546,7739,2798,1104,2261,7961,9194,9232,1718,2138,2328,6737,9880,8560,8488,4591,2348,7245,6703,8970,9087,534,202,9402,529,541,8102,6356,135,3952,6046,1231,4444,3854,4453,838,5107,3505,7265,9240,4537,1716,8509,6146,4683,1381,4721,3251,4502,3832,6888,7712,2508,576,2720,7078,9680,1992,2841,6059,3768,9234,637,770,4901,5905,6648,3149,3227,2693,3508,7025,5588,888,368,7260,300,9699,1323,6683,5699,6459,8859,3974,4608,4504,7366,8548,5656,3642,3664,2031,1e3,7623,3215,6761,8360,6790,7250,8040,6582,6456,1135,9597,1092,7688,4362,8312,9349,5870,1576,5129,8268,762,2239,7978,4253,2191,64,9057,1415,9216,4869,103,9947,5100,4421,1613,6316,2013,5602,2454,2656,5431,2362,6121,9813,945,802,5077,8110,4154,6537,3827,4771,3524,8386,4309,4670,1884,677,3419,8255,1432,3041,8823,344,182,7392,4003,4414,198,1541,1295,63,6105,9340,1343,1011,2359,9558,9211,402,3679,8008,3467,6694,1012,8443,47,7242,3089,2937,6591,9100,6896,4063,8673,2704,9562,1225,5621,8047,3519,1049,6578,1106,9056,1232,8362,9230,1560,2538,106,2363,1706,7305,1297,5087,8052,7339,8049,4808,5227,8905,7912,1285,2280,1522,5745,756,13,2981,4496,816,1451,2975,2624,5153,1099,3229,8428,2279,7859,6410,7657,6840,4852,5559,8909,1742,7681,5842,5325,6475,1051,3700,6919,8011,8507,4236,7771,5590,6723,6472,4950,1385,113,7142,4137,8503,2834,5294,8001,3552,8669,7860,6220,6376,2515,9079,264,9710,9482,9041,6111,1479,4221,1390,4981,9369,4305,3367,2872,8675,6191,2630,515,7669,4045,5365,1302,9030,9968,6700,3572,4015,6413,8797,6304,904,8629,2019,7104,8538,1408,9423,7108,7479,9109,3220,3941,6119,859,3136,3492,8611,5487,5498,1912,1399,5388,1299,3254,3942,8391,7534,9299,1703,1086,6975,5239,4877,9265,4311,6199,3330,5986,9849,5546,9764,1122,2925,8318,4772,2186,1332,1431,574,9325,3678,1259,781,9926,7840,8286,369,9973,8687,2738,7554,9322,5885,9889,345,6727,3538,7338,5258,7169,4148,8054,2691,4672,8796,2902,5725,823,7643,273,4069,3112,5806,8599,6622,8055,6202,2823,6654,9076,7812,3636,4326,1034,1637,6460,6271,9274,7564,9284,4818,5714,2965,2607,5623,3866,4863,2023,2115,1631,3715,4379,8045,9255,1620,9436,2489,1194,9522,91,1646,4200,5246,9834,3179,4385,3184,5861,5524,9640,5809,9619,9863,6937,2103,1164,7215,4971,3977,4719,7241,4473,2795,7112,7832,482,8751,6394,8098,4703,8981,1856,6082,2397,1820,3030,3689,8224,710,1550,5181,2522,5549,5297,594,3352,5113,7702,3341,6619,957,2320,595,3444,2619,6249,3130,7237,688,5217,5797,5686,6148,8320,4185,8219,691,3784,7115,9817,1490,391,634,1796,871,6879,4034,98,4301,5898,9732,9005,1915,2743,6429,9654,9344,6878,3690,5581,6152,3772,6320,4328,6936,7307,3900,6816,540,2276,9017,7684,9611,1991,7409,6768,5604,6398,3324,9443,5377,1105,7163,3436,7449,9962,7800,3312,9419,568,1113,2832,9929,499,8510,4994,4616,145,2671,2216,9472,4580,323,4505,6013,998,6036,4027,4146,6506,6173,6586,9490,7986,8596,3989,2003,7690,3122,5963,3987,5661,5089,7758,1686,7627,2294,4423,4322,3551,8273,8830,6545,6927,2383,5469,1182,6550,3603,1832,7270,6385,5860,6718,8061,9346,1891,1879,1735,5179,5920,757,6911,6779,3388,3668,9466,1158,1211,7551,1800,6001,8872,5832,8082,9,5878,7918,6625,760,1082,3048,6280,4644,4222,2229,166,2941,4346,552,9719,4567,7303,2996,2102,1919,7877,1668,582,7071,9428,7468,3055,9518,3079,9927,417,2978,7325,9227,6336,9392,8961,4241,2911,972,3970,1745,2321,3875,6270,5998,304,900,867,2368,2644,8335,3799,2309,9207,8591,5664,3957,523,5712,8566,1037,512,9450,5495,4874,5854,1593,2986,7286,8502,2398,3449,502,8403,5322,4295,1356,3378,3245,9560,6150,6125,2951,5634,9264,6912,973,3944,8030,2020,287,6144,1544,7950,1564,5846,3387,2875,8944,1448,8694,8278,1369,5042,8241,6415,2335,1696,176,6838,9156,8889,2281,7005,911,5308,5392,8514,1198,4377,2843,8640,2056,9388,6396,3148,1704,193,9456,6865,2708,3881,7470,805,8339,4822,7526,2118,4398,4117,3658,6964,1433,6889,5543,1140,8358,7911,7063,5274,5009,8711,1997,5029,7256,9469,9084,5778,9389,6090,7517,6095,4482,3165,3736,3726,612,6870,5635,257,7393,7841,95,6563,4420,8275,3871,9848,8228,3187,6374,1382,8092,6759,1326,4871,2198,5183,8141,4622,6312,2571,1009,4054,6225,4191,8322,7766,5785,7031,1405,9409,8850,2748,8349,1196,6763,6092,7861,1074,2945,9457,8883,2517,8639,3144,3681,5492,3794,4172,4948,6812,9162,5906,8450,6445,9761,4895,9278,382,3010,6308,2935,8955,9217,7555,6885,8595,3823,5044,901,9638,1531,9397,3568,6272,8345,9970,7280,8116,2821,9524,2556,1085,1676,9152,5976,4748,1813,4851,6521,6,3432,4957,125,6639,4040,8103,4e3,6400,1722,7814,2568,3276,858,704,1904,6842,51,8142,9391,7647,7835,6145,734,8250,4244,4523,3286,1150,7993,6687,7727,3632,3594,9657,3861,1287,5692,6605,3520,7952,8524,7630,7662,6239,9018,817,437,7161,9267,6233,6294,4232,3277,7755,4038,3840,340,6216,6933,8772,4075,6516,4485,4470,4856,6228,3314,2151,9945,6048,5989,7591,2518,9324,1117,9953,9778,775,1032,758,9835,6029,4478,7730,7508,1896,8156,4085,8982,5018,395,2428,8295,5344,5035,938,810,5111,6579,3598,1578,3114,5713,4465,6293,7059,4857,4637,4517,1334,1424,3034,1090,3893,5362,1607,7184,3472,5490,3833,5115,6337,9365,7036,2448,6300,1126,9213,2036,4215,4449,3440,1170,4081,4022,2249,7301,1013,409,4111,3550,4012,9197,7500,9206,7435,8436,9720,1930,3935,7113,2386,5326,5969,6447,4248,4457,2293,6704,8333,8294,8479,9955,8703,7484,2040,6568,148,870,9407,4563,3083,9936,5542,6835,2997,5743,8106,4224,9920,5449,4881,2268,8785,3355,8727,9008,7935,9127,6035,7186,6265,7951,7900,5261,240,37,2484,1645,6187,8e3,5413,8056,1118,2008,9705,9621,3424,7267,7298,149,1333,6257,4625,2692,1974,6158,5993,7252,7166,2449,429,284,8256,5309,5391,8119,8048,19,5648,3133,6124,9066,8776,9584,939,6254,8267,2009,8497,7299,6916,3029,8763,8303,8743,3607,4084,4299,5066,2096,8575,7518,9856,5410,8745,2749,5323,4074,2678,3762,2422,1993,6503,860,8374,1068,3143,7096,3711,2021,6719,819,7574,3562,7816,4139,1237,3691,1941,4182,685,1076,5933,9972,7778,7125,4266,1609,6693,843,6610,659,2396,5584,7335,2994,4538,853,115,7839,236,8262,7334,1739,1491,995,3829,6479,2303,9715,4561,3053,8016,3780,8238,5314,7569,2117,4422,5685,6441,131,4203,4963,1921,4919,233,1439,5387,6801,3563,5117,8046,7817,5813,3023,444,669,2954,1377,1452,6446,2900,9231,2684,7596,2833,2062,4615,3973,36,7315,5540,4587,5730,8152,6900,9803,16,768,6086,4834,394,1682,1731,6585,3897,8447,9771,9564,8744,6588,2947,7425,2057,7707,306,2373,5056,6373,7141,1418,8211,6421,1780,235,8766,8990,8965,8492,2022,847,4062,953,7464,3852,3101,9403,3285,4131,5298,910,1061,8099,5819,3478,3400,9509,6077,3515,4773,1016,2608,2822,4760,1136,5452,8229,3778,4846,5312,1457,5787,3180,9828,309,3657,349,7272,8821,6969,8139,8419,9201,3072,3918,5994,2338,6733,5922,1525,5700,4261,959,209,8693,6424,5755,8858,738,1,6179,1304,4128,2244,3423,8544,6861,9590,5619,6674,1725,9966,8039,1401,6251,29,419,9650,8546,9909,6025,6397,6341,944,8131,1060,5923,1444,3936,8661,9944,3477,6965,8169,4568,5564,1148,1419,7283,6770,1168,1485,5747,4604,7686,9252,2782,6402,7401,6057,8020,399,4264,2593,5220,6213,6177,3310,3753,8051,4982,7183,6647,6243,1570,4612,1116,5716,3889,2539,4474,8646,9924,9627,1959,7931,3239,8469,9485,3103,6250,2803,4180,4595,4555,9413,4092,2537,7949,3870,1226,6684,7745,6102,160,9378,5893,4351,308,5282,4339,5839,798,9257,3336,2495,3525,7796,719,641,6338,3641,4893,5576,8898,4145,3401,7781,9022,6744,4792,9862,9220,7029,8137,5926,5795,5507,5300,5273,9642,3321,7417,8660,2067,8334,9394,7499,4634,3262,3542,7200,9248,4292,5430,4258,3224,7346,2435,3393,7492,4559,3745,6637,3269,7131,2215,6226,7126,906,1545,625,7532,1709,1942,3156,2159,4358,812,3759,5886,5441,718,1721,8401,7107,8326,9104,6393,3544,5219,7079,4066,7703,1368,9726,1872,7501,3901,8681,1112,8240,4870,1873,530,1844,280,2983,690,9511,4306,5168,6355,7277,8916,9749,923,7083,5439,7683,4638,4452,3947,194,4698,6748,9615,5693,8656,9280,4766,8380,7223,3139,811,7291,2219,310,9105,5081,931,8498,4751,9600,678,613,5380,2318,6281,749,7342,7533,2506,1183,28,1234,609,1575,2025,2106,7507,6357,4508,9140,4718,1200,6774,5888,8788,5605,8135,7228,5460,1648,2450,5053,3917,1781,7836,6377,7945,7524,9520,8852,5780,7928,5428,9013,3066,5235,7698,2675,4686,5093,3908,7825,1316,2598,9789,5075,7427,2853,8923,6499,101,818,4776,3353,2590,9868,4363,6482,5374,9900,1625,7397,5883,5480,5786,2455,9743,4810,9412,9781,1373,8609,6584,8342,8804,4562,3855,6834,5228,8181,1760,9812,7321,407,6679,1784,2729,1495,7724,4729,3185,4642,6288,2516,686,2744,8690,3558,262,3650,9390,8222,6669,7152,9293,9762,826,8217,2301,528,3584,949,8553,4294,964,48,420,1590,3127,3579,3644,776,673,8435,7289,9352,6495,8140,8900,2818,3798,6977,4868,7080,8623,5638,4188,2083,668,5717,4534,983,3883,663,7790,1774,6328,4396,6234,9886,8125,4755,181,1634,4733,842,6523,8761,6461,3535,1262,7720,7968,3319,7557,8187,7441,2888,1248,5607,1614,7399,6302,2709,7801,4764,4098,875,9759,9358,8770,4198,2695,2715,5875,4712,9212,7997,4998,4279,2953,4804,4451,156,1964,844,4518,3586,6017,2076,3578,636,4838,4934,1986,8468,2550,4872,9847,2687,1814,2587,5131,3910,2490,1042,7354,1834,7193,788,8771,2549,4564,9269,2189,8865,9335,3654,1320,6877,5931,2512,6221,2631,9702,9907,3504,909,117,2423,2613,5489,351,1768,1925,7649,4889,9480,5434,1454,3248,170,2933,6164,1509,4019,9374,5345,1527,4859,7553,2847,1546,4829,9181,5837,3821,6891,3615,8486,2789,1450,927,9773,8064,5e3,293,1065,999,3126,7381,5068,177,1652,4972,682,8867,7779,7735,8123,7171,2299,4389,9371,3265,8952,4268,1772,5849,7038,8388,7337,1205,1934,9075,1586,2890,3087,190,1038,6824,3297,1474,3028,7127,9931,3075,4332,6181,3111,8984,5794,2319,1944,9071,2342,3357,9225,6476,8230,1223,6488,6710,7811,4658,2944,8677,2250,8569,2909,765,4742,2222,8490,1771,5959,518,7446,1422,4096,3243,573,2258,8251,2111,2856,1594,9025,3534,3188,9029,2349,1261,6617,7880,2697,5189,2836,3085,9128,5731,6898,9414,9433,4790,581,2195,4436,2772,5641,8074,2121,5903,2482,7846,670,9146,1310,624,3138,5649,6411,8151,1517,1775,1067,5006,1845,214,8088,2158,6961,9873,7680,5726,5001,5620,5440,7658,3653,8417,4409,5268,1989,5691,6641,1077,5967,3309,6621,6321,372,9245,6301,9670,8685,6240,9693,6315,6811,6109,9516,9730,4331,2372,1650,1134,3370,5269,8897,8894,4744,30,5494,9488,8464,8573,6561,9912,8878,269,6793,3461,8701,5432,7858,7450,7719,8426,2884,7847,8314,9830,2269,5517,8460,155,7278,6329,9717,2147,9854,3268,3288,2987,6074,5841,8976,5099,5566,6739,493,1003,5522,1557,5256,6079,6970,2400,9356,2943,8885,1017,7616,3770,9747,5468,3609,1365,5805,2039,9169,4976,7456,1367,9031,877,9700,7580,1484,8824,1041,666,3279,5707,9724,4854,1031,195,6297,5914,672,3270,4779,2710,4357,4847,6511,2370,7965,9186,2722,4500,3446,3841,6527,5516,183,9061,8274,1145,5090,750,4800,4684,8306,1679,549,7921,1854,8847,8381,5119,8904,7248,8651,2778,7677,874,2679,665,2259,7934,2776,7013,187,8196,6269,6528,5483,6941,780,6518,4335,7767,3331,108,2810,3289,7027,630,7155,6948,2498,8133,646,3811,2001,5084,1455,9347,278,1123,3392,9452,2146,4786,5418,7878,7536,913,8018,6153,9620,9351,5702,6068,7319,3968,2170,8960,5850,5198,7043,7356,2314,7304,433,1189,2010,4495,1987,5458,4480,4860,2387,8860,598,4046,9373,928,2582,390,2344,7977,8147,9048,5557,4557,3819,3521,2957,5729,2378,5350,3677,4324,6875,2762,3394,7037,7632,2444,7888,1633,4312,9094,6230,4204,3659,5937,4284,2580,2861,1979,3888,5338,9528,4526,9446,4187,89,7922,3191,5021,5835,1817,1264,9508,3150,2765,6698,2809,6491,933,231,3337,3296,8779,2341,7545,4100,1453,2777,8585,6418,6717,1191,2787,4048,1298,6114,3723,3210,566,6327,1131,99,6011,3523,538,6623,4060,5116,5556,6534,6636,3247,8472,2263,2,7786,70,6481,8647,676,9911,687,7144,5718,4337,6204,6132,5448,1460,172,3777,5306,1023,4223,8704,3717,2426,5985,1309,6800,6020,5799,6193,9513,1434,8073,3949,7523,4209,136,6571,3284,6332,4163,1662,7178,5555,6895,1532,105,9523,1098,4833,4340,6539,7984,5154,1436,2561,9819,524,5901,3347,4263,5486,3091,2361,1322,55,8592,7451,5211,2289,4226,1830,1579,7582,8917,1627,2090,744,3971,3040,7336,6103,2870,7194,6935,3554,9096,4450,535,729,4628,7212,8608,5071,1551,550,9712,9117,3671,9020,1624,3995,1641,4967,8803,8689,6422,4001,9421,1279,9366,6866,291,6229,68,5957,3261,2492,6365,118,1982,5033,5320,9869,5257,2028,4692,2599,7964,3656,7448,9512,7165,301,1924,3064,4353,2881,2840,3361,3734,5791,8822,3354,8418,2418,725,2792,571,9686,5812,9662,7505,3985,1039,3537,8221,2554,9556,2813,1249,7327,88,150,1476,9644,9034,3098,8243,7676,9375,9266,3047,69,2214,7586,9222,5248,4108,371,8706,7706,9183,8930,4242,3209,4598,6097,8784,8126,2315,3001,73,333,418,3280,1481,6602,4543,730,8531,5331,8845,6127,9003,252,3566,2035,2041,2456,2468,8540,6670,9361,4814,5408,8288,1313,6060,8459,1562,4902,4468,1176,1103,92,497,9853,5978,2959,9538,6354,9495,8,3020,5363,1301,5101,7780,650,2295,8236,7066,9574,2187,9315,2892,2534,3218,6175,5848,3807,6604,4388,3174,1058,5637,2934,9462,4484,5358,2152,1503,4973,3587,599,1973,994,2377,2859,2445,3581,6914,9093,3655,8994,6030,4119,7717,1821,6799,4412,5928,1762,6274,8561,6709,4666,7179,7585,8578,3940,526,963,82,1536,1413,4429,884,3782,8168,7948,7617,643,1417,5944,9504,6876,6009,6882,1239,7795,5324,1585,1463,1910,2421,2800,1004,9799,9285,3929,2641,8827,4368,2143,4820,8010,5695,142,3980,7805,8946,4794,7082,164,6452,7890,7177,3859,3162,3758,484,7023,1533,279,255,8908,7285,7235,698,2267,7067,8163,5719,9844,2221,2520,3740,8695,294,2500,8794,6235,4276,5613,4908,1100,6600,9645,3100,1021,5960,7919,8610,4106,2217,6926,8109,3359,3597,1523,8549,1779,6906,6218,9251,2883,5644,1812,2854,9281,1936,592,6212,5595,7943,2044,7820,197,894,7121,7462,2202,6676,533,3074,2923,1467,3786,7884,5504,2045,9260,8398,7613,2566,7230,8430,876,8164,1374,3154,5209,2467,9209,4885,9012,7788,779,777,5927,5260,9382,7913,7394,7044,8729,7491,9891,6526,3817,9937,5265,14,8719,5433,6781,2272,9263,3313,543,1766,8680,2839,9530,78,890,8015,8519,6789,8083,9043,5136,6484,7149,5152,6104,5538,2942,4336,2532,7489,6016,7150,1073,6552,5669,8753,3480,6986,7504,5082,7546,3781,1311,8627,9954,3104,2563,6613,8659,2120,6457,2380,4392,4678,9090,3181,7106,1505,4641,7469,400,5521,1605,7863,674,2939,7219,2474,1659,295,1708,4149,6423,6786,7873,2674,6910,5577,9531,8474,5473,6058,1108,6066,5157,2618,6182,4147,8013,9877,6432,266,705,6554,5583,4844,7926,2559,7736,1553,7465,404,3682,6532,9254,6171,4540,7357,448,5321,9860,2141,475,9506,207,9319,1870,2063,3585,7221,5411,4415,6185,2581,5170,8071,553,317,3857,1954,8212,3008,5034,1705,7738,5278,6519,4740,9829,1515,8285,7535,6667,3092,5379,642,6370,6978,4784,8346,2894,4550,238,2806,1242,5199,8713,9583,6451,577,5587,2926,7154,8485,6920,393,6045,4369,7341,510,6075,2663,5134,1894,1458,5765,8215,5169,9291,7804,4275,3506,3448,143,1966,3213,4999,1736,693,1880,311,9147,1167,9963,7048,1743,2724,9427,8724,2531,9044,4334,5834,4592,1843,7129,546,7482,5406,8068,9226,6655,2004,3428,2091,6395,8257,5080,3233,5877,660,8769,7294,2565,2773,2936,1091,8199,1720,7697,8132,8892,3495,8059,6197,4949,3293,2511,9837,1588,4926,3109,9605,8906,5401,608,1657,6881,5271,8427,4558,8712,7849,4122,2486,3160,5451,5810,6021,6161,4921,6967,8568,3623,8266,7196,1764,6947,2242,4916,8357,3688,120,8115,7428,2509,5334,6417,2064,1350,5105,6962,8188,1985,3997,2129,3455,4946,7542,3966,9317,942,4086,1965,6303,4103,1727,5753,2747,1655,9099,3497,8235,2544,4819,679,9772,993,9379,6681,5267,6565,4665,5659,714,9630,2716,4676,6974,7610,1717,251,129,8691,5443,9521,6238,6925,946,1478,8089,4617,5004,9571,434,7065,4664,4935,8297,4765,6923,9124,6149,8445,5076,3415,8848,4528,4055,7205,2649,354,3275,2637,2178,9143,2928,2084,7728,487,4382,452,6918,7487,8500,2658,330,3687,3706,854,8590,5341,7130,5869,1996,4709,7560,3570,2233,1889,4240,7636,5708,4157,8833,6442,5988,4841,15,8148,6903,4759,5770,90,3173,3267,6725,1906,3110,8522,3962,2719,751,5871,6344,1110,4997,4041,281,9221,8989,5895,7146,9870,4401,5912,1487,5249,2874,6364,965,7602,9170,4801,6135,1054,2592,3481,2585,2392,3316,4297,8373,6284,2903,841,12,8622,3407,9167,9171,8765,9126,2995,443,3868,3894,5552,4082,8828,1274,5553,5072,2413,5724,350,8758,8330,4541,4030,4345,5774,9666,480,3647,2264,1563,8280,9825,845,873,8269,1400,8190,2366,3509,4333,1871,8077,7597,4903,7894,9454,5160,6883,1235,5525,1857,4317,1207,9594,6553,820,9393,6968,4775,7445,7410,6596,4386,5916,4005,359,5007,8323,463,2053,1714,7765,5193,9722,2648,2305,662,7775,936,9750,4738,1622,4762,7124,2465,6289,8237,4070,6949,5919,1203,7813,6780,215,7159,5722,3096,2683,477,8529,7722,8449,2698,4757,5651,9958,8615,4959,7538,2717,8941,7473,9368,4183,6769,5853,4968,7073,8475,7906,3922,8245,5632,9246,897,5304,1816,1752,1294,8700,9106,2620,7211,5296,5798,4143,8101,1867,7565,1124,5415,4249,3591,2972,3208,3131,4097,2521,771,4319,5728,1948,8870,1604,5696,5051,6360,5756,1370,7320,3934,6653,948,5855,8716,940,4631,307,5573,8564,1866,2731,277,1818,8644,8721,8399,474,6743,8518,9652,3943,1166,1654,9015,801,7605,41,2027,2086,6581,6755,3684,7609,5529,4466,1874,4652,1591,7493,3582,5285,2628,5122,2220,3595,8545,1767,9553,2718,5667,4011,2614,8764,8122,4130,9242,8805,5537,804,5395,2646,6170,7651,6381,3338,578,6406,5074,3792,1084,8209,7053,7570,754,5580,8702,1265,1534,297,2201,4936,4251,8921,4785,6186,6775,1728,6994,5961,1836,421,4597,1895,7787,2970,3094,3765,9933,5789,210,4051,8387,6494,5232,2575,2119,5597,8431,8890,644,3589,7158,1653,9399,8213,6163,6309,1045,9614,6756,9570,9014,9270,601,4715,962,3790,81,6313,3460,1425,1351,4105,886,2223,3626,6544,7757,9019,9121,1514,9386,9671,9734,1315,1847,8959,6612,4348,6869,8718,1758,6117,6989,702,5315,4237,4036,9288,7447,9073,6198,6691,5792,6567,2558,3732,2087,7552,514,3433,5336,1406,5147,8402,1044,2275,2068,9916,8457,7419,320,2774,7257,2029,8967,766,9215,1508,3518,3232,8594,3638,7600,1206,8408,1811,4940,7443,6151,9050,7954,8991,6256,4796,1890,2218,6963,9682,3300,3016,5818,2336,3474,8839,3386,9268,2416,2949,1538,2629,6846,2225,9009,5078,2735,1837,161,2771,7797,2487,7763,2526,7823,2990,1492,3266,4471,3815,2227,2433,9711,3752,5983,9515,2256,84,8369,639,1967,9380,7123,4208,1846,9439,3456,7619,715,4547,27,5746,2591,4079,4233,3421,4736,7793,386,2485,2240,6788,7844,4560,8473,6664,288,2209,9663,5900,8896,6844,5254,364,8864,5145,509,9941,1181,4584,3892,5984,4937,7650,7886,733,3403,80,3853,5627,7199,5176,7438,7522,3429,4858,122,6690,8582,6695,2615,1445,5204,4193,2811,7156,184,2967,5293,2234,5501,3383,5132,7062,8185,6682,7932,5500,5037,4257,4806,6857,5873,1995,5407,5096,5222,3190,8527,6031,6907,4660,2179,447,8565,3060,5247,7710,4355,7090,2638,6342,6072,6299,2677,8352,4133,3600,7002,3895,6044,4955,7842,5192,4076,2572,6893,8309,905,5091,7743,3445,8093,6572,6291,9751,2255,3486,9565,9612,9451,9777,8249,9150,722,5515,3485,424,3931,3960,1187,1878,8912,328,6558,2094,1865,4882,3527,1162,5801,7583,4656,339,6699,2033,2472,1441,7514,363,7189,7344,4727,785,7802,2317,1114,6087,5092,1087,9138,2523,4556,5194,6147,3670,2606,1507,5982,8072,5229,2283,7331,7653,7947,1296,6509,9157,1026,2916,4601,5398,6864,5244,3106,7614,7783,9899,1651,9572,5485,4861,8284,2026,2254,5088,846,9753,2343,8129,9301,6140,611,1384,623,5138,8722,3526,5673,796,8563,3635,5184,5019,5353,4438,7243,7718,1902,1202,2597,7035,6498,8063,1932,7733,4374,9561,790,7726,9525,4416,3349,9606,2857,1438,580,5519,8377,1692,367,1354,956,7992,5760,83,925,388,9065,1864,4080,8749,7432,6464,1840,8287,1057,8723,5196,7103,3373,4104,8874,1175,9292,157,7478,2211,3645,829,4693,9603,220,3217,7185,3157,3608,4014,2460,9336,5626,1222,8313,4588,9745,2873,5666,4823,2235,2940,2910,4269,4381,6732,9187,8097,6350,4190,3054,2251,6922,3560,431,3238,4706,165,5290,1513,3037,4126,5817,6292,5754,6685,6363,6217,8216,1723,7069,1765,9133,2439,7060,7640,3299,7667,3725,6531,2530,2869,9741,6508,1901,6431,85,7933,4267,9113,815,245,3502,3511,7021,2134,1446,2560,3398,4287,4290,4073,9554,285,4467,6231,3164,6548,3967,6504,1355,9706,1869,9174,3992,321,3998,8201,3115,4418,3522,6749,1667,5221,7360,9925,2206,1163,5275,8790,1471,9312,9327,5461,7074,2955,5800,4047,6246,5882,1056,8361,9474,8934,6157,8499,9649,8664,5618,7881,1606,3318,5373,4743,3129,1733,3676,4229,4832,7615,8666,1823,2297,1468,5811,610,6295,2784,4702,8715,1916,8807,8919,918,6645,7293,2645,9510,4842,7561,8873,958,3565,8301,2238,7980,935,3005,6026,3259,5343,9874,2291,1875,8087,9602,7160,6990,2262,6247,3774,700,2714,8699,3161,4687,9461,9628,4527,337,9585,2404,3494,4898,7970,564,3665,3697,8619,7379,3867,648,2312,4260,9155,8081,9173,2237,554,7467,5017,8170,2440,5997,4739,7101,6296,1096,1642,8392,2088,1047,3086,1001,8410,6207,5668,5710,8033,4179,7752,632,4749,5628,7942,1059,1215,2104,2043,3869,2038,602,9542,5721,6069,8332,1519,6335,4917,8528,1275,7675,2758,2505,3864,6128,7655,8849,5884,2816,4387,4691,9448,3891,741,1773,6450,3596,2124,3713,6628,4481,4728,1876,7498,9261,6608,6773,7091,5951,1030,7747,4488,2689,7172,5533,7132,5610,1740,4403,5412,5761,2252,9934,1848,6200,174,4489,6724,1276,4536,4839,9122,1146,8840,4697,1188,9905,2196,5757,1338,6319,4043,4680,7138,1947,296,8638,1220,2860,8966,5991,7094,9483,6056,4245,9593,4681,824,9164,5174,2750,138,1393,5277,3937,8154,9123,5098,4939,2661,8614,5151,2324,7413,3574,6307,2228,1289,379,4713,5102,1744,1701,740,8931,1802,2080,6214,3204,937,6651,119,2504,6946,7310,5945,4979,5055,5060,2345,6483,7034,1028,7909,8225,8484,7e3,1185,468,1599,976,481,144,9740,1976,4576,6174,3836,4310,6966,7944,8837,3555,2652,5952,1456,413,1010,9884,8478,5397,3434,6209,7263,2128,6587,839,7929,5226,6305,8533,1469,9494,3673,6607,8218,2e3,1893,7006,8091,6466,8938,2741,8586,4,6726,3919,5118,1141,5291,7946,8576,3926,4373,5589,1499,5972,6469,6034,3616,3406,1914,2564,483,4493,6112,1805,2577,2635,9010,825,8022,403,1665,8988,3006,4196,7914,2300,1807,9224,2046,5493,9277,850,6383,6993,5655,2050,1342,3206,8067,9410,1612,4072,4953,7170,2061,5238,6122,3422,1512,7452,2775,3231,4461,5503,2578,3216,6985,7423,4155,6414,234,6273,4228,809,1776,6819,5567,3327,6223,8995,4350,5752,1378,6599,2507,282,2791,5301,628,219,9058,5164,6404,5865,9885,8552,9195,4633,716,9935,5218,5636,4115,7666,5890,1828,9534,9239,5950,626,9768,2245,8819,6485,2877,5455,7072,6689,1635,3743,5904,4112,2327,7663,726,7673,2451,9342,4520,1777,5317,4090,50,2960,6902,4815,5385,6751,9697,244,2863,3958,9861,4636,2672,9496,191,9318,2390,9176,9673,597,4603,1933,6215,2265,7240,6750,8247,6644,2049,9913,7295,9243,2557,7276,8972,5022,6471,1101,3683,4579,9501,6850,5015,872,4701,9783,7548,4923,8943,223,4791,7723,5975,4725,2365,3137,1396,1161,9770,4123,8299,8739,4892,1548,4354,7220,4768,977,975,683,6677,319,7426,422,755,3628,5859,1250,9021,1336,4225,9969,2082,2154,1940,6438,7234,5106,1219,4566,6317,7714,7905,8440,795,697,3588,1835,2676,9672,5110,8203,2573,2403,6892,8446,3805,4674,3996,192,5252,5054,7868,3766,2149,8167,4551,3990,412,1221,5396,525,1520,2584,8198,167,9629,7271,96,1156,5807,7262,6210,5706,3132,9800,4456,2296,134,563,6706,3953,7485,2848,8452,5947,6839,1798,1095,7175,1698,9241,201,7562,4391,8937,1229,1154,3663,3490,6934,3071,5732,9233,3930,6051,1741,8024,7238,7318,2588,3177,9189,8279,2177,1666,491,9060,3954,8710,6853,1121,1142,893,8157,7985,4708,2647,5372,3151,8835,8461,3812,3755,8670,7378,7050,9486,218,6559,1394,6740,1949,3463,2906,361,4705,8327,5990,6169,4878,9895,9321,9179,1386,3806,2602,7455,4690,3882,8954,5625,5302,7302,1850,5973,8581,7474,2525,3192,2231,1137,1841,6311,8793,5680,1465,9563,2395,1489,591,9721,1292,253,3617,6771,1324,6564,6196,6851,7140,346,6168,3278,4129,2659,5390,1089,4731,2330,9218,8520,2711,6108,536,5141,185,7151,9199,7519,9491,3539,7247,6133,6033,3271,478,645,1677,5563,8429,5872,7513,3779,79,9437,130,1111,8637,4503,3824,7622,5375,3095,5858,6858,7917,5307,8775,5262,1346,4359,4867,6731,5351,3068,4160,4614,4271,5876,7837,1903,3167,6490,708,5360,7345,6931,6085,2734,9478,2407,883,9125,1180,8887,1618,5163,1732,2496,4600,32,5052,7373,1268,8234,416,1410,9007,3627,9943,3043,4140,8671,8031,1831,5603,5868,6032,8264,1270,3914,7311,2331,1905,9815,1956,5593,2707,570,8913,807,4499,9236,2371,5126,2136,9047,1632,7732,6407,3955,4087,8893,2183,3577,2411,2192,8263,1998,9843,5968,7244,5270,6487,6547,4668,5652,3874,8648,8422,7253,6958,8214,9158,902,5330,1097,9498,9631,8971,5158,3858,1783,7759,111,5561,6999,5311,5536,4629,5159,7400,5020,689,9865,2200,7665,5200,794,3991,4714,6283,6262,6862,2654,5676,7312,8935,8363,2723,8950,3409,5149,3890,8002,5214,4514,461,6268,7162,1793,9116,7670,6944,2207,3249,6583,9838,8593,6282,4437,6232,2700,3648,4441,1920,3643,1107,7475,5281,5896,7870,5709,8815,5941,2595,9286,2350,9460,8802,2494,4010,6041,2108,6758,9440,5212,5479,7744,6492,681,2739,5357,5328,9878,4542,2270,5420,5938,5689,7039,4782,1530,3189,9858,3080,5741,969,2130,5735,3024,3928,9559,1504,4835,4929,3236,5738,8382,401,7819,8880,9910,2625,4532,2527,5361,9463,5389,8095,9086,7940,1325,898,8836,4367,2070,8601,355,7340,1252,4161,6493,2162,4442,5497,3975,331,8663,3884,392,2956,9809,102,2551,2783,4905,1540,2122,9793,4602,4083,3230,8179,107,1387,547,7874,3273,8311,8355,3158,8412,6551,6065,3630,5814,671,5742,4477,9961,8974,9625,606,569,981,3712,9820,6203,4356,3119,1317,8963,7182,1470,2401,1671,5476,4006,1330,6671,8657,9887,2653,3123,961,9950,3662,6454,7749,5121,6339,410,5013,7206,7442,7481,9589,9658,5995,8476,1539,6007,100,4624,3414,6996,4427,6049,5305,6470,5711,5808,3710,4599,7953,4411,6369,6886,5386,5864,4788,2434,3735,8467,9766,3473,1707,9646,9205,2100,3925,9591,9470,1755,3384,7716,9738,9338,8066,4961,2702,743,9102,955,5827,6005,110,6028,3553,2005,6917,4107,7308,7098,454,7612,4988,8491,1877,8932,374,2188,9608,3567,4419,8394,2311,5491,2660,8742,8579,4050,8977,5456,6166,2412,8798,4943,5140,4219,65,4037,7119,4799,1900,5609,8442,6909,2993,9088,7383,4210,6514,8191,3320,7652,8162,4930,5781,6802,3964,6353,7769,8801,5349,2680,3649,2447,5488,615,7204,2432,778,5453,9228,1494,7876,6672,1266,951,4635,6134,7422,2181,7203,2897,9549,711,5550,9622,887,5094,7358,3483,4443,1020,9696,7966,9683,1230,6002,4996,6389,1019,8625,1719,9370,1674,3672,6275,4166,5368,8635,7537,8698,270,4605,5874,9923,4487,9107,5548,7996,9425,5663,17,6180,7576,1907,9915,9381,6165,3847,3993,7231,5646,5279,3317,8658,6627,8023,6987,3260,3652,1600,2133,6126,5802,2419,3176,8207,9453,9082,2185,6666,3088,2670,8534,2745,1328,9465,6720,4574,9765,8612,5061,7229,4986,7389,7510,1257,6678,8471,3059,1128,8080,9095,8620,7828,4964,3507,8571,5039,5654,3329,7135,8421,3178,3816,4433,8829,6194,2617,6501,3838,1937,6932,7207,8414,709,8968,6972,3873,4120,2871,1218,226,695,489,6278,6052,6440,4428,8244,8684,8328,2850,7046,3604,1420,423,1397,7748,2908,109,9313,1267,8567,6630,2919,5028,8621,66,1929,6901,5337,9200,2427,4619,8853,3107,3404,5064,8969,7466,242,2431,2998,3783,8550,1754,7734,1307,8032,8365,7938,6050,8003,9573,8458,9464,5414,3709,6018,8359,4067,9596,6538,9687,3939,3912,5477,3343,6992,4186,5124,2079,7731,4304,375,5879,3513,9289,2175,8319,2360,5690,5288,9651,5910,8806,1006,4650,9919,3413,3038,7829,9033,593,8242,7601,8755,4071,2375,5697,1592,968,8282,178,664,3450,9191,1329,2085,2895,9555,7654,430,7353,5438,5838,3571,6023,987,3576,222,6286,5688,7776,1360,9282,2514,6290,889,9639,230,9294,8587,5514,4695,1750,299,3620,1726,4431,2946,4671,7290,5069,4840,3742,8075,3042,8413,1347,1055,3441,1684,2817,127,5016,6959,5371,4338,9850,4425,4509,2224,4118,8204,470,1278,8223,7437,8696,6507,6899,2089,4780,6776,438,703,5128,5894,4184,1260,158,2545,6991,2097,7476,2880,960,7254,2340,739,1943,5210,8583,3169,1695,8127,3613,4848,2699,9473,5955,1619,7490,1978,9273,5518,833,896,505,6943,7041,2236,7099,5674,6347,5565,9902,6489,2605,24,4243,5622,8239,831,4406,3142,9636,1305,7236,2948,1596,7740,1349,8252,5446,9586,3374,7693,6416,8130,5701,4424,329,4053,7742,6390,408,7635,9188,5370,6266,3070,9345,9387,7689,4970,1186,2950,1477,1963,6616,7222,7821,373,7010,249,531,3458,5225,4195,7054,3528,1472,4752,2601,7122,6541,3368,1510,490,4024,9097,3844,979,8053,6426,4114,4464,1700,8697,3015,5207,2756,5381,3692,8884,9355,8862,1957,3141,4594,189,8879,855,8378,2726,720,2662,6890,8371,1416,2012,6444,4515,3366,360,5286,1792,3004,8632,7885,1152,8748,5611,4954,9328,1582,7521,1787,1461,5830,6657,589,9151,6688,5579,4314,9952,5002,2657,5416,5511,8515,5862,8987,7370,6055,2290,4282,7631,899,2626,9548,6100,2247,997,6897,6863,4091,5465,7197,7746,1127,2930,1015,114,4397,6015,9833,8886,6817,967,4330,8725,6042,9655,334,5678,3763,1339,4704,4960,4132,7599,5283,3546,116,8863,9455,8134,5977,857,1931,5295,6314,5378,4932,7815,5250,7093,5970,2827,3637,6078,2690,4667,3375,966,2322,7737,7715,3253,9408,8406,5672,5825,5046,2754,3223,5821,731,4375,4272,4952,5215,4546,504,3046,5148,4716,6560,9917,8964,1953,8733,8899,1529,9398,2876,488,6359,1402,3302,9840,7694,2701,7110,258,5687,1911,6762,6849,1629,8939,4218,6154,4136,5427,3978,2109,9249,786,520,7639,7224,4853,2347,1253,9353,6792,2346,8084,159,2213,3360,3741,1556,7830,4265,9664,2728,4486,7904,6115,5478,7941,2768,7077,8197,6409,879,1048,2169,1443,822,7848,2586,5234,3385,8432,8260,2436,9135,1518,3451,921,5934,7661,7809,4987,9432,9832,9754,396,9089,61,1702,537,4300,1565,9882,1348,4657,248,9684,8353,5939,3549,3358,991,4280,7644,2907,1199,9679,8415,1730,1815,5585,1680,892,442,8463,4920,5150,76,26,7317,9610,5125,8501,9023,6063,4376,3856,8366,3468,2763,1209,1277,5575,8832,7641,7343,5657,5201,2034,7461,3351,1395,1977,3877,2110,724,9500,8118,9059,6138,1033,1208,2148,8153,1070,3694,2414,7572,336,8321,9308,4927,8754,5569,5276,5965,8405,6661,856,370,1892,3605,9400,7792,4826,590,1601,9529,9332,6764,8302,9475,5332,6646,950,4726,1822,3135,9036,8117,7637,4620,3583,5450,3625,7210,3305,8555,9831,9144,9467,3501,2540,9690,9110,9709,381,6807,6692,2829,4519,2991,2569,3674,9731,5186,8336,5987,3452,635,2458,1379,539,1331,4578,2357,2163,2248,1280,970,7674,1459,8526,1308,3134,9713,7431,4883,9845,2600,7854,5166,2797,6777,9163,3241,5615,8709,6366,8172,9578,9888,9120,3199,4472,3590,8136,9791,8407,2603,9153,4323,8493,6735,3117,4093,121,3166,3906,9903,7772];function t2(){return Math.floor(Math.random()*A1.length*2)}function*_2(s){const t=s%(A1.length*2),a=Math.floor(s)%A1.length;let r=0;if(t<A1.length)for(let n=0;n<A1.length;n++)r=(n+a)%A1.length,yield A1[r];else for(let n=0;n<A1.length;n++)r=(n+a)%A1.length,yield A1[A1.length-r-1];return A1[a]}function w2(s,t){let a=_2(t);return s.map(n=>{let o=a.next();return o.done&&(a=_2(o.value||t),o=a.next()),{order:o.value,card:n}}).sort((n,o)=>n.order-o.order).map(({card:n})=>n)}function E3(s,t,a){var c,i;const r=(c=s.playerStates[t])==null?void 0:c.discardPile,n=(i=s.playerStates[t])==null?void 0:i.deck;if(!r||!n)return s;const o=w2(r,V2(s,a));return s.playerStates[t].discardPile=[],s.playerStates[t].deck=n.concat(o),s}function u2(s,t,a,r){if(!s.playerStates[a]||typeof t.value!="number")return{success:!1,nextGameState:s};switch(t.type){case"card":{for(let n=0;n<t.value;n++){s.playerStates[a].deck.length===0&&E3(s,a,r);const o=s.playerStates[a].deck.pop();if(!o)break;s.playerStates[a].hand.push(o)}break}case"action":{s.playerStates[a].actions=s.playerStates[a].actions+t.value;break}case"buy":{s.playerStates[a].buys=s.playerStates[a].buys+t.value;break}case"coin":{s.playerStates[a].coins=s.playerStates[a].coins+t.value;break}}return{success:!0,nextGameState:s}}function d2(s,t,a,r="discard"){if(!s.supply[a])return{success:!1,nextGameState:s};if(!s.playerStates[t])return{success:!1,nextGameState:s};const n=s.supply[a].pop();if(!n)return{success:!1,nextGameState:s};switch(s.playerStates[t].ownedCards.push(n),r){case"deck":case"deck-top":{s.playerStates[t].deck.push(n);break}case"deck-bottom":{s.playerStates[t].deck.unshift(n);break}case"hand":{s.playerStates[t].hand.push(n);break}default:s.playerStates[t].discardPile.push(n)}return{success:!0,nextGameState:s}}function T3(s,t,a){return!s.playerStates[a]||t.type!=="remodel-0"?{success:!1,nextGameState:s,continue:!0}:(s.playerStates[a].queuedEffects.push({type:"remodel-1",blocksPlayer:!0,message:`Remodel: Trash a card from your hand. Gain a card costing up to ${M1}2 more than it.`}),{success:!0,nextGameState:s,continue:!1})}function q3(s,t){const{playerId:a,payloadArray:r}=t,n=s.playerStates[a].queuedEffects.findIndex(I=>I.type==="remodel-1");if(n<0)return{success:!1,nextGameState:s,reason:"effect not queued",continue:!0};const o=r.pop();if(!o)return s.playerStates[a].queuedEffects.splice(n,1),{success:!0,nextGameState:s,continue:!1};if(r.length!==0)return{success:!1,nextGameState:s,reason:"You can only trash 1 card.",continue:!1};const c=m1(o);if(!c)return{success:!1,nextGameState:s,reason:"There is no such card.",continue:!1};const i=s.playerStates[a].hand.indexOf(o);if(i<0)return{success:!1,nextGameState:s,reason:`${c.displayNames[0]} isn't in your hand.`,continue:!1};const W=c.cost+2;return s.playerStates[a].queuedEffects.push({type:"remodel-2",blocksPlayer:!0,params:{maxCost:W,cardId:o},message:`Remodel: Gain a card costing up to ${M1}${W}.`}),s.playerStates[a].hand.splice(i,1),s.trash.push(o),s.playerStates[a].queuedEffects.splice(n,1),{success:!0,nextGameState:s,continue:!1}}function A3(s,t){var x,$;const{playerId:a,payloadArray:r}=t,n=s.playerStates[a].queuedEffects.findIndex(d=>d.type==="remodel-2");if(n<0)return{success:!1,nextGameState:s,reason:"effect not queued",continue:!0};const o=s.playerStates[a].queuedEffects[n];if(o.type!=="remodel-2")return{success:!1,nextGameState:s,reason:"effect not queued",continue:!0};const c=r.pop();if(!c)return s.playerStates[a].queuedEffects.splice(n,1),{success:!0,nextGameState:s,continue:!1};if(r.length!==0)return{success:!1,nextGameState:s,reason:"You can only choose 1 card.",continue:!1};const i=m1(c);if(!i)return{success:!1,nextGameState:s,reason:"There is no such card.",continue:!1};if(s.supply[c].length<1)return{success:!1,nextGameState:s,reason:`There aren't anymore ${i.displayNames[1]} in the supply.`,continue:!1};const W=(x=o.params)==null?void 0:x.maxCost;if(i.cost>W){const d=m1((($=o.params)==null?void 0:$.cardId)||"");return{success:!1,nextGameState:s,reason:`You can only gain a card that costs up to ${M1}${W} because you trashed ${d==null?void 0:d.displayNames[2]}.`,continue:!1}}const I=d2(s,a,c);return I.success?(s.playerStates[a].queuedEffects.splice(n,1),{success:!0,nextGameState:I.nextGameState,continue:!1}):{success:!0,nextGameState:I.nextGameState,reason:"Something went wrong",continue:!1}}const O3=[$3,D3,j3,T3];function $3(s,t,a){return!s.playerStates[a]||t.type!=="merchant-0"?{success:!1,nextGameState:s,continue:!0}:(s.playerStates[a].queuedEffects.push({type:"merchant-1",expiryTurn:-1}),{success:!0,nextGameState:s,continue:!1})}function D3(s,t,a){return!s.playerStates[a]||t.type!=="cellar-0"?{success:!1,nextGameState:s,continue:!0}:(s.playerStates[a].queuedEffects.push({type:"cellar-1",blocksPlayer:!0,message:"Cellar: Choose cards to discard."}),{success:!0,nextGameState:s,continue:!1})}function j3(s,t,a){return!s.playerStates[a]||t.type!=="workshop-0"?{success:!1,nextGameState:s,continue:!0}:(s.playerStates[a].queuedEffects.push({type:"workshop-1",blocksPlayer:!0,message:`Workshop: Gain a card costing up to ${M1}4.`}),{success:!0,nextGameState:s,continue:!1})}function N3(s,t){return F3(s,t)}function F3(s,t){if(!s.playerStates[t])return{success:!1,nextGameState:s,continue:!0};if(!s.playerStates[t].inPlay.slice(-1))return{success:!1,nextGameState:s,continue:!0};if(s.playerStates[t].inPlay.filter(o=>{const[c]=o.split(":");return c==="silver"}).length!==1)return{success:!1,nextGameState:s,continue:!0};const n=s.playerStates[t].queuedEffects.filter(o=>o.type==="merchant-1");for(let o=0;o<n.length;o++)u2(s,{type:"coin",value:1},t);return s.playerStates[t].queuedEffects=s.playerStates[t].queuedEffects.filter(o=>o.type!=="merchant-1"),{success:!0,nextGameState:s,continue:!1}}function Y3(s,t){switch(t.type){case"cellar-1":return R3(s,t);case"workshop-1":return L3(s,t);case"remodel-1":return q3(s,t);case"remodel-2":return A3(s,t)}return{success:!1,nextGameState:s,reason:"not an effect from the dominion set",continue:!0}}function R3(s,t){const{playerId:a,payloadArray:r}=t;if(s.playerStates[a].queuedEffects.filter(i=>i.type==="cellar-1").length===0)return{success:!1,nextGameState:s,reason:"effect not queued",continue:!0};const n=s.playerStates[a].hand.filter(i=>!r.includes(i)),o=s.playerStates[a].hand.length-n.length;if(o!==r.length)return{success:!1,nextGameState:s,reason:"You don't have some of those cards.",continue:!1};s.playerStates[a].hand=n,s.playerStates[a].discardPile=s.playerStates[a].discardPile.concat(r),s.playerStates[a].queuedEffects=s.playerStates[a].queuedEffects.filter(i=>i.type!=="cellar-1");const c=u2(s,{type:"card",value:o},a);return c.success?{success:!0,nextGameState:c.nextGameState,continue:!1}:{success:!1,nextGameState:c.nextGameState,reason:"Something went wrong",continue:!1}}function L3(s,t){const{playerId:a,payloadArray:r}=t;if(s.playerStates[a].queuedEffects.filter(i=>i.type==="workshop-1").length===0)return{success:!1,nextGameState:s,reason:"effect not queued",continue:!0};const n=r.pop();if(!n)return s.playerStates[a].queuedEffects=s.playerStates[a].queuedEffects.filter(i=>i.type!=="workshop-1"),{success:!0,nextGameState:s,continue:!1};if(r.length!==0)return{success:!1,nextGameState:s,reason:"You can only choose 1 card.",continue:!1};const o=m1(n);if(!o)return{success:!1,nextGameState:s,reason:"There is no such card.",continue:!1};if(s.supply[n].length<1)return{success:!1,nextGameState:s,reason:`There aren't anymore ${o.displayNames[1]} in the supply.`,continue:!1};if(o.cost>4)return{success:!1,nextGameState:s,reason:`You can only gain a card that costs up to ${M1}4 with a Workshop.`,continue:!1};const c=d2(s,a,n);return c.success?(s.playerStates[a].queuedEffects=s.playerStates[a].queuedEffects.filter(i=>i.type!=="workshop-1"),{success:!0,nextGameState:c.nextGameState,continue:!1}):{success:!0,nextGameState:c.nextGameState,reason:"Something went wrong",continue:!1}}const x2=[...O3];class U1{constructor(t,a){k1(this,"gameId");k1(this,"inProgress",!1);k1(this,"players",{});k1(this,"hostId");k1(this,"playerStates",{});k1(this,"supplyList",[]);k1(this,"supply",{});k1(this,"trash",[]);k1(this,"turnOrder",[]);k1(this,"turn",0);k1(this,"turnAdjustment",0);k1(this,"turnPhase","lobby");k1(this,"gameSeed",t2());this.players={[t.playerId]:t},this.hostId=t.playerId,this.turnOrder=[t.playerId],a?this.gameId=a:this.gameId=(Math.random()*1e4).toString(16).replace(".","-")}addPlayer(t){this.players[t.playerId]=t,this.turnOrder.push(t.playerId)}test(){this.playerStates={},Object.values(this.players).forEach(t=>{this.playerStates[t.playerId]=v2(t.playerId)}),this.supplyList.length===0&&this.setSupply(["cellar","moat","village","merchant","workshop","smithy","remodel","militia","market","mine"]),this.turn=0,this.turnAdjustment=0,this.turnPhase="action",this.gameSeed=t2()}reset(){this.playerStates={},this.inProgress=!1,this.turnOrder=[],this.turn=0,this.turnAdjustment=0,this.turnPhase="lobby",this.gameSeed=t2()}setSupply(t){const a=t.filter(r=>C2.includes(r));return a.length<10?{success:!1,reason:"Not enough valid Kingdom cards"}:a.length>10?{success:!1,reason:"Too many Kingdom cards."}:(this.supplyList=[],this.supply={},[...S2,...a].forEach(r=>{const n=R2(r,Object.keys(this.players).length);this.supplyList.push(r),this.supply[r]=n}),{success:!0})}start(){this.turn=0,this.turnAdjustment=0,this.turnPhase="action",this.turnOrder=w2(Object.keys(this.players),t2()),this.playerStates={},Object.keys(this.players).forEach((t,a)=>{this.playerStates[t]=v2(t,a),this.applyEffect(t,{type:"card",value:5},a)})}applyEffect(t,a,r){const n=u2(this.getGameState(),a,t,r);this.playerStates=n.nextGameState.playerStates;for(let o=0;o<x2.length;o++){const c=x2[o](this.getGameState(),a,t);if(!c.continue){this.playerStates=c.nextGameState.playerStates;return}}}playCard(t,a){var n,o;if(this.getActivePlayerId()!==t)return{success:!1,reason:"It's not your turn."};if(!((n=this.playerStates[t])!=null&&n.hand.includes(a)))return{success:!1,reason:"That card is not in your hand."};const r=m1(a);if(!r)return{success:!1,reason:"Invalid card"};switch(this.turnPhase){case"action":{if(!r.types.includes("action"))return{success:!1,reason:"You can only play cards with the Action type in the Action phase."};if(((o=this.playerStates[t])==null?void 0:o.actions)===0)return{success:!1,reason:"You need Actions to play cards in the Action phase."};this.playerStates[t].actions=this.playerStates[t].actions-1;break}case"buy-0":{if(!r.types.includes("treasure"))return{success:!1,reason:"You can only play cards with the Treasure type in the Buy phase."};break}case"buy-1":return r.types.includes("treasure")?{success:!1,reason:"You cannot play Treasure cards in the Buy phase once you've started buying cards."}:{success:!1,reason:"You cannot play non-Treasure cards in the buy phase."};case"cleanup":return{success:!1,reason:"You cannot play cards during the Clean-up phase."};case"lobby":return{success:!1,reason:"The game hasn't started yet."};case"over":return{success:!1,reason:"The game is over."}}this.playerStates[t].hand=this.playerStates[t].hand.filter(c=>c!==a),this.playerStates[t].inPlay=this.playerStates[t].inPlay.concat([a]);for(let c=0;c<r.effects.length;c++)this.applyEffect(t,r.effects[c]);return N3(this.getGameState(),t),{success:!0}}buyCard(t,a){if(this.getActivePlayerId()!==t)return{success:!1,reason:"It's not your turn."};switch(this.turnPhase){case"action":return{success:!1,reason:"You cannot buy cards in the Action phase."};case"buy-0":return{success:!1,reason:"You cannot buy cards until you finish playing Treasures."};case"buy-1":break;case"cleanup":return{success:!1,reason:"You cannot buy cards during the Clean-up phase."};case"lobby":return{success:!1,reason:"The game hasn't started yet."};case"over":return{success:!1,reason:"The game is over."}}if(this.playerStates[t].buys===0)return{success:!1,reason:"You don't have any more Buys."};const r=m1(a);if(!r)return{success:!1,reason:`${a} is not a valid card name.`};if(!this.supplyList.includes(a))return{success:!1,reason:`${r.displayNames[0]} isn't in this game.`};if(this.playerStates[t].coins<r.cost)return{success:!1,reason:`You cannot afford ${r.displayNames[0]}.`};const{success:n}=d2(this.getGameState(),t,a,"discard");return n?(this.playerStates[t].coins=this.playerStates[t].coins-r.cost,this.playerStates[t].buys=this.playerStates[t].buys-1,{success:!0}):{success:!1,reason:`No ${r.displayNames[1]} in the supply.`}}endPhase(t,a){if(this.getActivePlayerId()!==t)return{success:!1,reason:"It's not your turn."};const[r,...n]=a.split(""),o=[r.toUpperCase(),...n].join("");if(this.turnPhase!==a)return{success:!1,reason:`It's not the ${o} phase`};switch(a){case"action":{this.turnPhase="buy-0";break}case"buy-0":{this.turnPhase="buy-1";break}case"buy-1":{this.turnPhase="action";const c=this.playerStates[t].hand.concat(this.playerStates[t].inPlay);this.playerStates[t].hand=[],this.playerStates[t].inPlay=[],this.playerStates[t].discardPile.push(...c),this.applyEffect(t,{type:"card",value:5}),this.playerStates[t].actions=0,this.playerStates[t].buys=0,this.playerStates[t].coins=0,this.playerStates[t].queuedEffects=this.playerStates[t].queuedEffects.filter(({expiryTurn:W})=>typeof W!="number"||this.turn<W),this.turn=this.turn+1;const i=this.getActivePlayerId();this.playerStates[i].actions=1,this.playerStates[i].buys=1;break}case"cleanup":{this.turnPhase="action";break}default:return{success:!1,reason:`You cannot end the ${o} phase normally.`}}return{success:!0}}doQueuedEffect(t){const{playerId:a}=t;return this.playerStates[a].queuedEffects.map(n=>n.type).includes(t.type)?Y3(this.getGameState(),t).success?{success:!0}:{success:!1,reason:"Couldn't perform effect."}:{success:!1,reason:`There's no queued effect for you to do. (${t.type})`}}getActivePlayerId(t=0){return W1(this,t)}getGameState(){return{gameId:this.gameId,supplyList:this.supplyList,supply:this.supply,trash:this.trash,playerStates:this.playerStates,turnOrder:this.turnOrder,players:this.players,hostId:this.hostId,turn:this.turn,gameSeed:this.gameSeed,turnAdjustment:this.turnAdjustment,turnPhase:this.turnPhase}}getGameStateForPlayer(t){const a={};return Object.values(this.playerStates).forEach(r=>{const{discardPile:n}=r,o={...r,deck:r.deck.map((c,i)=>`unknown:d${i}`),discardPile:n.length===0?[]:n.slice(-1)};r.playerId!==t&&(o.hand=o.hand.map((c,i)=>`unknown:h${i}`)),a[r.playerId]=o}),structuredClone({gameId:this.gameId,supplyList:this.supplyList,supply:this.supply,trash:this.trash,playerStates:a,turnOrder:this.turnOrder,players:this.players,hostId:this.hostId,turn:this.turn,gameSeed:this.gameSeed,turnAdjustment:this.turnAdjustment,turnPhase:this.turnPhase})}}var M3=j("<option> </option>"),B3=j("<div> </div>"),I3=j('<div class="flex flex-row items-start"><button class="button-default">Default</button> <button class="button-default">2 Players</button> <select class="button-default block"><option>Choose a test case</option><!></select> <div> </div> <!> <div class="grow"></div></div>'),J3=j('<!> <div class="absolute right-0 max-h-screen w-max overflow-y-auto border bg-main-bg px-2 can-hover:top-10 cannot-hover:top-14"><details class="w-max"><summary>Debug: Full Game</summary> <pre class="w-max"> </pre></details> <details><summary>Debug: Visible Game</summary> <pre class="w-max"> </pre></details> <details><summary>Debug: Player State</summary> <pre class="w-max"> </pre></details></div>',1);function s5(s,t){G1(t,!1);const a=()=>s2(O1,"$gameStateStore",r),[r,n]=c2(),o={"Remodel Test":W2,"Workshop Test":H2,"Merchant Test":J2,"Cellar Test":z2,"Many Actions":K2,"Many In-Play":U2,"Browser Crash: Play Smithy to crash":Z2},c="Player 1",i="aaaaaa",W="a12345",I=()=>({name:c,playerId:i,token:W});let x=S(!0),$=S(""),d=S(new U1(I())),X=S(""),b=S(""),h=S("");F1(O1,u(a).gameState=e(d).getGameStateForPlayer(i),u(a)),l2(()=>{l(d,new U1(I()));const P=e(d).setSupply(["cellar","moat","village","merchant","workshop","smithy","remodel","militia","market","mine"]);l(x,P.success),l($,P.reason||""),e(d).start(),F1(O1,u(a).gameState=e(d).getGameStateForPlayer(i),u(a)),l(b,JSON.stringify(e(d),null,"  ")),l(h,JSON.stringify(e(d).getGameStateForPlayer(i),null,"  "))}),a2();var A=J3(),O=$1(A);w3(O,{playerId:i,onBuy:P=>{const D=e(d).buyCard(i,P);l(x,D.success),l($,D.reason||""),F1(O1,u(a).gameState=e(d).getGameStateForPlayer(i),u(a)),l(b,JSON.stringify(e(d),null,"  ")),l(h,JSON.stringify(e(d).getGameStateForPlayer(i),null,"  "))},onPlayCard:P=>{const D=e(d).playCard(i,P);l(x,D.success),l($,D.reason||""),F1(O1,u(a).gameState=e(d).getGameStateForPlayer(i),u(a)),l(b,JSON.stringify(e(d),null,"  ")),l(h,JSON.stringify(e(d).getGameStateForPlayer(i),null,"  "))},onEndPhase:P=>{const D=e(d).endPhase(i,P);l(x,D.success),l($,D.reason||""),F1(O1,u(a).gameState=e(d).getGameStateForPlayer(i),u(a)),l(b,JSON.stringify(e(d),null,"  ")),l(h,JSON.stringify(e(d).getGameStateForPlayer(i),null,"  "))},onPlayEffect:P=>{const D=e(d).doQueuedEffect(P);l(x,D.success),l($,D.reason||""),F1(O1,u(a).gameState=e(d).getGameStateForPlayer(i),u(a)),l(b,JSON.stringify(e(d),null,"  ")),l(h,JSON.stringify(e(d).getGameStateForPlayer(i),null,"  "))},children:(P,D)=>{var M=I3(),c1=p(M),C=g(c1,2),q=g(C,2);H(()=>{e(X),N2(()=>{e(d),a(),e(b),e(h)})});var o1=p(q);o1.value=o1.__value="";var P1=g(o1);L1(P1,1,()=>Object.entries(o),n2,(m,R)=>{var T=M3(),g1=p(T,!0);f(T);var u1={};H(()=>{L(g1,e(R)[0]),u1!==(u1=e(R)[0])&&(T.value=(T.__value=e(R)[0])??"")}),w(m,T)}),f(q);var b1=g(q,2),_1=p(b1,!0);f(b1);var _=g(b1,2);{var E=m=>{var R=B3(),T=p(R,!0);f(R),H(()=>L(T,e($))),w(m,R)};B(_,m=>{e(x)||m(E)})}F2(2),f(M),H(()=>L(_1,e(X))),C1("click",c1,()=>{l(d,new U1(I()));const m=e(d).setSupply(["cellar","moat","village","merchant","workshop","smithy","remodel","militia","market","mine"]);l(x,m.success),l($,m.reason||""),e(d).start(),F1(O1,u(a).gameState=e(d).getGameStateForPlayer(i),u(a)),l(b,JSON.stringify(e(d),null,"  ")),l(h,JSON.stringify(e(d).getGameStateForPlayer(i),null,"  "))}),C1("click",C,()=>{l(d,new U1(I())),e(d).addPlayer({name:"player 2",playerId:"bbbbbb",token:"b12345"});const m=e(d).setSupply(["cellar","moat","village","merchant","workshop","smithy","remodel","militia","market","mine"]);l(x,m.success),l($,m.reason||""),e(d).start(),F1(O1,u(a).gameState=e(d).getGameStateForPlayer(i),u(a)),l(b,JSON.stringify(e(d),null,"  ")),l(h,JSON.stringify(e(d).getGameStateForPlayer(i),null,"  "))}),I2(q,()=>e(X),m=>l(X,m)),C1("change",q,m=>{const R=m.currentTarget.value,T=o[R];T&&(l(d,new U1(I())),e(d).test(),R1(d,e(d).turnPhase="action"),R1(d,e(d).playerStates[i]=T(i))),F1(O1,u(a).gameState=e(d).getGameStateForPlayer(i),u(a)),l(b,JSON.stringify(e(d),null,"  ")),l(h,JSON.stringify(e(d).getGameStateForPlayer(i),null,"  ")),l(X,"")}),w(P,M)},$$slots:{default:!0}});var t1=g(O,2),s1=p(t1),U=g(p(s1),2),h1=p(U,!0);f(U),f(s1);var Q=g(s1,2),l1=g(p(Q),2),a1=p(l1,!0);f(l1),f(Q);var G=g(Q,2),y1=g(p(G),2),i1=p(y1,!0);f(y1),f(G),f(t1),H(P=>{L(h1,e(b)),L(a1,e(h)),L(i1,P)},[()=>{var P;return JSON.stringify((P=a().gameState)==null?void 0:P.playerStates[i],null,"  ")}]),w(s,A),e2(),n()}export{s5 as component};
